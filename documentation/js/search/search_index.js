var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnyExceptionsFilter.html",[0,0.079,1,2.094]],["body/classes/AnyExceptionsFilter.html",[0,0.085,1,2.979,2,0.032,3,0.319,4,0.319,5,4.321,6,1.832,7,2.739,8,2.502,9,1.3,10,2.502,11,3.441,12,0.978,13,2.89,14,2.437,15,3.214,16,2.92,17,3.04,18,2.89,19,3.04,20,2.017,21,0.483,22,2.979,23,2.89,24,0.319,25,2.042,26,1.832,27,2.517,28,0.319,29,2.017,30,1.2,31,1.878,32,0.893,33,1.674,34,1.832,35,1.301,36,2.517,37,1.731,38,1.832,39,3.348,40,3.456,41,2.517,42,2.89,43,3.456,44,2.89,45,2.517]],["title/controllers/AppController.html",[46,1.435,47,2.094]],["body/controllers/AppController.html",[0,0.104,2,0.032,3,0.392,4,0.392,9,1.07,12,1.301,21,0.598,24,0.392,28,0.392,46,2.332,47,3.402,48,2.059,49,3.555,50,5.251,51,4.251,52,4.251,53,4.391,54,4.251,55,1.888,56,1.737,57,4.765,58,3.555,59,2.481,60,4.251,61,1.363,62,4.251]],["title/modules/AppI18nModule.html",[63,0.749,64,1.886]],["body/modules/AppI18nModule.html",[0,0.096,2,0.032,3,0.361,4,0.361,21,0.607,24,0.361,28,0.361,32,0.635,48,1.898,53,4.174,55,1.741,56,2.243,63,1.156,64,2.913,65,2.856,66,3.205,67,3.92,68,4.99,69,4.99,70,3.92,71,2.217,72,3.278,73,3.636,74,3.278,75,1.898,76,3.92,77,3.92,78,3.92,79,3.92,80,4.99,81,4.99,82,4.99,83,3.92,84,3.92,85,2.288,86,3.92,87,2.54,88,2.54,89,1.741,90,3.92]],["title/modules/AppModule.html",[63,0.749,91,2.094]],["body/modules/AppModule.html",[0,0.097,2,0.032,3,0.366,4,0.366,21,0.643,24,0.366,28,0.366,47,3.58,48,2.438,57,4.21,58,3.323,63,1.28,75,1.924,91,4.078,92,1.924,93,2.319,94,2.319,95,1.924,96,2.938,97,1.924,98,3.323,99,3.323,100,3.574,101,3.574,102,3.973,103,3.323,104,3.323,105,3.323,106,1.623,107,1.765,108,3.973,109,3.973,110,3.973]],["title/injectables/AuthMiddleware.html",[111,0.813,112,2.094]],["body/injectables/AuthMiddleware.html",[0,0.064,2,0.032,3,0.24,4,0.24,9,0.654,12,1.184,21,0.511,24,0.24,28,0.24,30,0.903,31,1.541,32,0.789,35,1.833,37,1.833,59,1.518,61,1.209,87,2.444,111,0.949,112,2.444,113,1.894,114,3.772,115,4.438,116,3.772,117,2.15,118,4.438,119,3.772,120,2.591,121,2.6,122,2.858,123,2.6,124,3.772,125,4.353,126,2.6,127,4.438,128,4.072,129,3.772,130,3.154,131,3.772,132,3.772,133,3.154,134,3.772,135,2.395,136,3.772,137,4.438,138,3.017,139,4.869,140,2.6,141,1.685,142,3.772,143,2.174,144,1.894,145,1.259,146,2.748,147,2.174,148,2.6,149,2.6,150,2.6,151,2.6,152,2.6,153,2.6,154,2.6,155,2.6,156,1.685,157,2.6,158,1.894,159,2.6,160,3.772,161,2.6,162,1.518,163,2.6,164,1.894,165,2.748,166,1.675,167,2.6,168,1.685,169,2.6,170,1.894]],["title/modules/AuthModule.html",[63,0.749,171,1.886]],["body/modules/AuthModule.html",[0,0.087,2,0.032,3,0.326,4,0.326,20,2.066,21,0.607,24,0.326,28,0.326,30,1.229,63,1.211,66,2.066,71,2.075,75,1.714,85,2.066,92,1.714,93,2.066,94,2.066,95,1.714,96,2.726,97,2.262,112,3.027,122,3.376,143,2.96,171,3.533,172,2.96,173,2.96,174,2.96,175,3.539,176,3.539,177,4.671,178,5.56,179,3.539,180,4.671,181,4.671,182,4.671,183,3.539,184,3.539,185,2.579,186,3.539,187,3.539,188,3.539,189,3.539,190,2.96,191,3.539,192,3.539,193,3.539,194,3.539,195,3.539,196,3.539,197,2.579,198,3.539]],["title/injectables/AuthService.html",[111,0.813,122,1.713]],["body/injectables/AuthService.html",[0,0.072,2,0.032,3,0.272,4,0.272,9,0.743,11,1.723,12,1.253,15,2.41,21,0.59,24,0.272,28,0.272,31,1.687,32,0.669,55,1.311,61,1.527,106,1.206,107,1.311,111,1.039,117,2,120,3.282,122,2.189,125,4.097,128,4.703,135,2.411,144,2.151,162,1.723,165,2.151,166,1.311,168,1.913,170,2.151,185,2.151,199,2.469,200,4.129,201,4.129,202,2.151,203,5.157,204,5.773,205,2.952,206,1.834,207,4.129,208,2.952,209,3.342,210,4.129,211,2.952,212,2.952,213,2.151,214,1.723,215,2.952,216,4.129,217,2.952,218,2.952,219,1.565,220,2.952,221,2.952,222,2.151,223,1.946,224,2.469,225,2.952,226,2.952,227,2.952,228,2.952,229,2.952,230,2.952,231,2.952,232,2.952,233,2.952,234,2.952,235,2.952,236,2.952,237,2.952]],["title/classes/BadRequestFilter.html",[0,0.079,238,2.094]],["body/classes/BadRequestFilter.html",[0,0.082,2,0.032,3,0.309,4,0.309,7,2.698,8,2.464,9,1.281,10,2.464,11,2.97,12,0.713,14,2.388,16,2.698,17,2.884,19,2.698,20,1.957,21,0.534,22,3.525,24,0.309,25,2.001,26,1.777,27,2.442,28,0.309,29,1.957,30,1.164,32,0.92,33,1.624,34,1.777,35,1.696,36,2.442,37,2.137,38,1.777,41,2.442,45,2.442,145,1.624,238,2.919,239,4.256,240,2.804,241,3.768,242,4.505,243,4.505,244,3.352,245,3.352,246,3.352,247,3.352,248,3.297,249,2.698,250,3.352,251,4.256,252,3.352,253,3.352,254,2.172,255,3.352,256,3.352]],["title/classes/BaseExceptionsFilter.html",[0,0.079,25,1.435]],["body/classes/BaseExceptionsFilter.html",[0,0.059,2,0.032,3,0.222,4,0.222,6,1.278,7,2.253,8,2.428,9,1.262,10,2.058,11,2.083,12,1.212,14,1.892,15,3.171,16,2.253,17,2.49,19,2.49,20,2.083,21,0.526,24,0.222,25,1.585,26,1.892,28,0.222,30,0.837,32,0.689,33,1.168,34,1.278,35,1.768,37,1.887,38,1.278,55,1.071,56,1.919,66,1.407,89,1.585,106,0.985,107,1.585,141,2.753,145,1.168,202,1.756,206,2.332,214,1.407,219,1.278,248,3.401,249,2.253,254,1.562,257,3.249,258,3.421,259,3.421,260,3.569,261,2.411,262,2.411,263,2.478,264,3.171,265,3.421,266,2.741,267,2.411,268,2.6,269,1.562,270,1.144,271,2.48,272,1.562,273,1.756,274,1.756,275,1.756,276,1.756,277,1.562,278,1.756,279,1.562,280,1.756,281,1.756,282,1.562,283,1.756,284,1.756,285,1.756,286,1.892,287,1.756,288,1.562,289,1.407,290,1.756,291,1.756,292,1.756,293,1.756,294,1.756,295,1.756,296,1.756,297,1.756,298,1.756]],["title/modules/CoreModule.html",[63,0.749,100,1.886]],["body/modules/CoreModule.html",[0,0.082,1,2.915,2,0.032,3,0.308,4,0.308,21,0.627,22,2.167,24,0.308,28,0.308,56,1.367,63,1.177,64,3.409,75,1.62,92,1.62,93,1.952,94,1.952,95,1.62,96,2.626,97,1.62,100,3.626,206,1.486,238,2.915,241,3.762,251,2.797,299,2.797,300,2.797,301,2.829,302,2.829,303,3.345,304,2.797,305,4.498,306,2.797,307,4.498,308,3.345,309,3.345,310,3.345,311,5.082,312,5.082,313,3.345,314,3.345,315,3.345,316,3.345,317,3.345,318,3.345,319,4.498,320,5.435,321,2.167,322,2.915,323,3.345,324,2.915,325,3.345,326,3.345,327,5.435,328,5.435]],["title/modules/DatabaseModule.html",[63,0.749,301,1.565]],["body/modules/DatabaseModule.html",[0,0.107,2,0.032,3,0.404,4,0.404,21,0.606,24,0.404,28,0.404,32,0.867,63,1.239,71,2.375,75,2.12,85,2.556,97,2.12,301,2.986,329,3.19,330,3.662,331,2.837,332,3.895,333,3.662,334,3.662,335,3.662,336,3.662,337,3.662]],["title/classes/HttpExceptionFilter.html",[0,0.079,324,2.094]],["body/classes/HttpExceptionFilter.html",[0,0.083,2,0.032,3,0.314,4,0.314,6,1.806,7,2.72,8,2.485,9,1.291,10,2.485,11,3.331,12,0.969,13,2.85,14,2.415,16,2.903,17,3.026,18,2.85,19,2.903,20,1.989,21,0.539,22,3.998,23,2.85,24,0.314,25,2.023,26,1.806,27,2.482,28,0.314,29,1.989,30,1.183,31,1.861,32,0.888,33,1.65,34,1.806,35,1.715,36,2.482,37,1.931,38,1.806,39,3.324,41,2.482,42,2.85,44,2.85,45,2.482,145,1.65,272,2.951,324,2.951,338,4.29,339,3.407,340,3.407]],["title/interfaces/IErrorData.html",[270,1.036,271,1.886]],["body/interfaces/IErrorData.html",[0,0.063,2,0.032,3,0.237,4,0.237,6,1.364,7,1.984,8,2.137,9,1.11,10,1.246,12,1.337,14,1.364,15,2.828,16,1.364,17,1.984,19,1.364,21,0.54,24,0.237,25,1.143,26,1.364,28,0.237,30,0.894,32,0.715,33,1.246,34,1.364,35,1.409,37,1.661,38,1.364,55,1.143,56,1.529,66,2.828,89,1.662,106,1.051,107,1.662,141,1.667,145,1.246,206,1.96,214,1.501,219,1.364,248,3.592,249,2.848,254,1.667,257,1.667,258,3.214,259,2.727,263,2.523,264,3.381,265,2.727,266,2.185,268,1.874,269,1.667,270,1.2,271,2.828,272,2.425,273,3.529,274,3.529,275,3.529,276,1.874,277,1.667,278,1.874,279,1.667,280,1.874,281,1.874,282,1.667,283,1.874,284,1.874,285,1.874,286,1.984,287,1.874,288,1.667,289,1.501,290,1.874,291,1.874,292,1.874,293,1.874,294,1.874,295,1.874,296,1.874,297,1.874,298,1.874]],["title/interfaces/IExtendData.html",[266,1.886,270,1.036]],["body/interfaces/IExtendData.html",[0,0.069,2,0.032,3,0.26,4,0.26,6,1.493,7,2.117,8,2.248,9,1.168,10,1.364,12,1.305,14,1.493,15,2.709,16,1.493,17,2.117,19,1.493,21,0.56,24,0.26,25,1.251,26,1.493,28,0.26,30,0.978,32,0.752,33,1.364,34,1.493,35,1.504,37,1.747,38,1.493,55,1.251,56,1.632,66,1.643,89,1.774,106,1.15,107,1.774,141,1.824,145,1.364,206,2.061,214,1.643,219,1.493,248,3.272,249,2.936,254,3.272,257,1.824,258,2.909,259,2.909,263,2.243,264,3.112,265,2.909,266,2.709,268,2.051,269,1.824,270,1.28,271,2.948,272,1.824,273,2.051,274,2.051,275,2.051,276,2.051,277,1.824,278,2.051,279,1.824,280,2.051,281,2.051,282,1.824,283,2.051,284,2.051,285,2.051,286,2.117,287,2.051,288,1.824,289,1.643,290,2.051,291,2.051,292,2.051,293,2.051,294,2.051,295,2.051,296,2.051,297,2.051,298,2.051]],["title/modules/LoggerModule.html",[63,0.749,302,1.565]],["body/modules/LoggerModule.html",[0,0.088,2,0.032,3,0.331,4,0.331,21,0.587,24,0.331,28,0.331,32,0.854,63,1.093,71,2.095,75,1.739,89,2.095,97,1.739,103,3.004,104,3.004,105,3.004,106,1.467,107,2.095,164,2.617,206,2.095,302,2.812,341,2.617,342,3.592,343,5.266,344,5.266,345,4.231,346,3.836,347,3.004,348,2.617,349,3.004,350,3.592,351,3.592,352,3.592,353,3.592,354,3.592,355,3.592,356,4.716,357,3.592,358,3.592,359,3.004,360,3.592,361,3.592,362,3.004]],["title/injectables/LoggingInterceptor.html",[111,0.813,322,2.094]],["body/injectables/LoggingInterceptor.html",[0,0.081,2,0.032,3,0.306,4,0.306,9,0.836,21,0.594,24,0.306,28,0.306,30,1.154,32,0.917,37,1.686,61,1.065,87,2.153,106,1.357,107,1.989,111,1.127,117,1.609,138,2.956,202,2.42,206,2.589,214,1.939,219,1.761,269,2.153,277,2.153,279,2.153,322,2.901,363,2.42,364,3.949,365,4.236,366,3.262,367,3.322,368,2.901,369,2.874,370,3.512,371,3.322,372,1.939,373,3.282,374,3.745,375,1.939,376,4.478,377,2.153,378,3.745,379,2.778,380,4.478,381,4.478,382,5.065,383,2.778,384,4.478,385,3.322,386,3.322]],["title/interfaces/PlainLiteralObject.html",[270,1.036,387,2.094]],["body/interfaces/PlainLiteralObject.html",[0,0.102,2,0.032,3,0.276,4,0.276,12,1.021,21,0.593,24,0.276,28,0.384,29,1.748,32,0.916,35,2.054,61,1.925,88,3.66,111,1.05,117,1.45,138,2.434,270,0.96,368,1.941,369,2.544,370,2.702,372,1.748,373,2.702,375,1.748,377,1.941,387,3.89,388,2.182,389,2.995,390,3.496,391,2.995,392,3.488,393,2.505,394,4.013,395,4.013,396,1.941,397,2.182,398,2.505,399,2.505,400,2.702,401,2.702,402,2.182,403,1.588,404,3.488,405,2.505,406,4.563,407,2.505,408,2.505,409,2.505,410,2.505,411,2.505,412,3.488,413,2.505,414,2.505,415,4.013,416,2.505,417,4.013,418,2.505,419,2.505,420,3.488,421,2.505,422,2.505,423,2.182,424,2.505,425,3.488,426,2.505,427,2.505,428,2.505,429,1.941,430,3.488,431,1.941,432,2.182,433,2.505,434,3.038,435,1.941,436,1.941]],["title/interfaces/RequestUser.html",[135,1.435,270,1.036]],["body/interfaces/RequestUser.html",[2,0.032,3,0.391,4,0.391,12,1.389,28,0.391,125,4.331,135,2.328,165,4.331,166,2.641,168,3.852,170,4.331,263,2.528,270,1.359,437,3.545,438,3.545]],["title/guards/RolesGuard.html",[439,2.354,440,1.886]],["body/guards/RolesGuard.html",[0,0.106,2,0.032,3,0.228,4,0.228,8,2.777,9,0.622,12,1.285,21,0.532,24,0.228,28,0.228,30,0.859,31,1.762,32,0.911,37,0.931,61,1.624,85,1.443,111,0.915,135,1.615,144,1.801,166,1.615,197,2.648,222,3.141,223,1.01,321,1.602,369,3.04,372,2.775,379,2.068,435,1.602,436,1.602,439,2.648,440,2.122,441,2.068,442,4.312,443,4.754,444,3.635,445,4.754,446,2.068,447,4.43,448,2.472,449,2.472,450,5.618,451,2.472,452,4.312,453,4.698,454,3.635,455,2.472,456,3.635,457,2.472,458,3.635,459,2.472,460,2.472,461,2.472,462,1.443,463,1.602,464,2.472,465,2.472,466,2.068,467,2.068,468,2.472,469,2.472,470,3.635,471,2.472,472,3.635,473,3.635,474,2.472,475,2.472,476,2.472,477,2.472,478,2.472,479,2.472,480,2.472]],["title/injectables/SerializerInterceptor.html",[111,0.813,403,1.713]],["body/injectables/SerializerInterceptor.html",[0,0.088,2,0.032,3,0.224,4,0.224,12,1.003,21,0.552,24,0.224,28,0.331,29,1.417,32,0.853,35,1.981,61,1.83,88,3.761,111,0.903,117,2.066,138,2.75,270,0.778,366,2.613,368,2.324,369,2.886,370,3.053,372,2.49,373,2.764,375,1.417,377,1.573,387,3.993,388,1.768,390,3.432,392,3.567,393,2.03,394,4.204,395,4.204,396,1.573,397,1.768,398,2.03,399,2.03,400,2.324,401,2.324,402,1.768,403,1.901,404,2.999,405,2.03,406,4.204,407,2.03,408,2.03,409,2.03,410,2.03,411,2.03,412,3.94,413,2.03,414,3.567,415,3.567,416,2.03,417,3.567,418,2.03,419,2.03,420,2.999,421,2.03,422,3.567,423,2.613,424,3.567,425,2.999,426,2.03,427,2.03,428,2.999,429,1.573,430,2.999,431,1.573,432,2.613,433,2.999,434,2.613,435,1.573,436,1.573,481,3.586,482,3.586,483,2.427,484,2.427,485,2.427,486,2.427,487,2.427,488,2.427,489,2.427]],["title/controllers/UsersController.html",[46,1.435,490,1.713]],["body/controllers/UsersController.html",[0,0.062,2,0.032,3,0.235,4,0.235,9,0.642,21,0.617,24,0.235,28,0.235,31,1.793,32,0.712,39,2.844,46,1.133,48,1.235,59,1.488,61,1.407,71,1.652,120,3.373,135,2.517,162,2.171,166,1.133,209,3.47,223,2.361,403,1.352,440,1.488,462,1.488,463,1.652,490,1.972,491,1.652,492,2.844,493,3.11,494,3.671,495,2.133,496,3.515,497,2.133,498,3.11,499,4.479,500,3.901,501,4.479,502,2.133,503,3.11,504,2.133,505,2.133,506,2.133,507,2.133,508,2.133,509,4.035,510,3.671,511,2.133,512,2.133,513,3.11,514,2.133,515,2.709,516,2.133,517,2.133,518,3.11,519,4.035,520,2.133,521,2.133,522,4.035,523,1.858,524,2.133,525,1.652,526,2.133,527,1.858,528,1.652,529,2.133,530,1.858,531,1.858,532,1.801,533,1.858,534,1.652,535,1.858,536,2.133,537,2.133,538,2.133,539,2.133,540,2.133,541,2.133,542,2.133,543,2.133,544,2.133,545,3.671,546,2.133,547,2.133,548,2.133,549,2.133,550,3.11,551,2.133,552,4.035,553,2.133,554,2.133,555,2.133,556,2.133,557,2.133,558,2.133]],["title/controllers/UsersController-1.html",[46,1.202,156,1.753,490,1.434]],["body/controllers/UsersController-1.html",[0,0.062,2,0.032,3,0.234,4,0.234,9,0.64,21,0.616,24,0.234,28,0.234,31,1.79,32,0.71,39,2.839,46,1.129,48,1.231,59,1.483,61,1.405,71,1.648,120,3.37,135,2.515,162,2.165,166,1.129,209,3.466,223,2.359,403,1.347,440,1.483,462,1.483,463,1.647,490,1.967,491,1.647,492,2.839,493,3.102,494,3.664,495,2.125,496,3.509,497,2.125,498,3.102,499,4.473,500,3.897,501,4.473,502,2.125,503,3.102,504,2.125,505,2.125,506,2.125,507,2.125,508,2.125,509,4.028,510,3.664,511,2.125,512,2.125,513,3.102,514,2.125,515,2.702,516,2.125,517,2.125,518,3.102,519,4.028,520,2.125,521,2.125,522,4.028,523,1.851,524,2.125,525,1.647,526,2.125,527,1.851,528,1.647,529,2.125,530,1.851,531,1.851,532,1.796,533,1.851,534,1.647,535,1.851,536,2.125,537,2.125,538,2.125,539,2.125,540,2.125,541,2.125,542,2.125,543,2.125,544,2.125,545,3.664,546,2.125,547,2.125,548,2.125,549,2.125,550,3.102,551,2.125,552,4.028,553,2.125,554,2.125,555,2.125,556,2.125,557,2.125,558,2.125,559,2.125]],["title/modules/UsersModule.html",[63,0.749,101,1.886]],["body/modules/UsersModule.html",[0,0.099,2,0.032,3,0.371,4,0.371,21,0.645,24,0.371,28,0.371,48,2.459,63,1.288,75,1.951,92,1.951,93,2.351,94,2.351,95,1.951,96,2.964,97,1.951,101,3.683,171,3.586,223,1.646,330,3.369,331,2.61,490,2.948,527,2.934,532,2.976,533,2.934,560,3.369,561,4.028,562,3.369,563,4.028,564,4.028,565,3.369,566,4.028]],["title/injectables/UsersService.html",[111,0.813,532,1.565]],["body/injectables/UsersService.html",[0,0.051,2,0.032,3,0.193,4,0.193,9,0.528,12,1.059,21,0.523,24,0.193,28,0.193,31,2.239,32,0.922,61,1.661,88,1.358,89,1.734,111,0.808,117,1.015,120,3.48,162,2.754,168,3.464,209,3.895,213,1.527,219,1.111,222,3.188,223,1.928,263,2.648,282,1.358,286,2.07,306,1.753,331,1.358,429,1.358,431,2.081,492,2.081,496,3.894,530,1.527,531,1.527,532,1.555,565,1.753,567,1.527,568,3.211,569,4.376,570,3.211,571,3.211,572,3.904,573,2.096,574,2.096,575,3.211,576,3.211,577,2.096,578,2.096,579,3.211,580,2.096,581,3.211,582,2.096,583,2.096,584,4.376,585,5.593,586,2.096,587,4.333,588,3.904,589,3.211,590,1.527,591,3.211,592,2.096,593,4.678,594,1.753,595,2.096,596,2.096,597,2.096,598,2.096,599,2.686,600,1.753,601,1.753,602,2.096,603,2.096,604,2.096,605,1.753,606,2.096,607,2.096,608,2.096,609,2.34,610,2.096,611,4.718,612,2.096,613,2.096,614,3.211,615,2.096,616,2.096,617,2.096,618,2.096,619,2.096,620,2.096,621,2.096,622,2.096,623,2.096,624,2.096]],["title/injectables/WrapResponceInterceptor.html",[111,0.813,625,2.354]],["body/injectables/WrapResponceInterceptor.html",[0,0.054,2,0.032,3,0.204,4,0.204,9,0.557,10,2.18,12,1.082,21,0.534,24,0.204,28,0.309,30,0.769,31,1.649,32,0.881,35,0.833,59,1.292,61,1.743,111,0.843,117,2.83,130,1.851,138,2.357,197,2.439,249,2.696,263,1.793,264,2.627,270,0.71,286,2.563,321,1.434,366,2.439,368,2.169,369,3.217,370,2.917,372,3.365,373,2.616,374,2.8,375,1.292,377,1.434,383,1.851,390,2.439,397,1.613,429,2.169,434,2.439,435,2.169,436,1.434,446,1.851,447,4.252,453,2.8,463,1.434,625,2.439,626,4.416,627,1.851,628,3.348,629,3.348,630,3.348,631,4.501,632,2.214,633,3.348,634,4.037,635,2.214,636,2.214,637,5.437,638,3.348,639,2.214,640,3.348,641,2.214,642,2.214,643,3.348,644,2.214,645,4.037,646,3.348,647,2.214,648,1.613,649,1.613,650,2.439,651,2.439,652,2.214,653,2.214,654,2.214,655,2.214,656,2.214,657,2.214,658,2.214,659,2.214,660,2.214,661,3.348,662,2.214,663,2.214,664,2.214,665,2.214,666,2.214,667,2.214,668,2.214,669,2.214,670,1.613]],["title/coverage.html",[671,4.394]],["body/coverage.html",[0,0.113,1,1.52,2,0.032,5,1.961,6,2.627,25,1.042,46,1.857,47,1.52,49,1.961,65,1.708,71,1.042,73,1.708,89,1.042,95,1.136,111,1.308,112,1.52,113,2.547,122,1.243,135,1.042,146,1.708,166,1.042,199,1.961,223,0.958,238,1.52,239,1.961,240,1.961,257,2.709,266,1.369,270,1.485,271,1.369,301,1.136,302,1.136,322,1.52,324,1.52,329,2.547,332,1.708,338,1.961,341,3.375,345,1.708,346,1.708,348,1.708,363,2.547,364,1.708,387,1.52,388,2.547,400,1.52,401,1.52,403,1.243,431,3.002,437,1.961,438,1.961,439,1.708,440,1.369,441,1.961,462,1.369,490,1.853,491,2.709,525,1.52,528,1.52,532,1.136,534,1.52,567,3.045,609,1.708,625,1.708,626,1.961,627,1.961,648,1.708,649,1.708,650,1.708,651,1.708,670,4.31,672,3.496,673,6.476,674,6.424,675,6.408,676,1.961,677,1.961,678,2.345,679,3.496,680,3.496,681,2.345,682,2.345,683,3.875,684,4.144,685,1.961,686,5.756,687,1.961,688,1.961,689,2.924,690,2.924,691,1.961,692,1.961,693,1.961,694,1.961,695,1.961,696,1.961,697,1.961,698,1.961,699,2.924,700,1.961,701,1.961,702,1.961,703,1.961,704,1.961,705,2.345,706,2.345,707,2.345,708,3.496,709,3.496,710,4.18,711,4.18,712,2.345,713,2.345,714,2.345,715,2.345,716,2.345,717,1.961,718,3.496,719,3.496,720,2.345,721,2.345,722,1.961,723,2.345,724,2.345]],["title/dependencies.html",[92,1.88,725,2.263]],["body/dependencies.html",[0,0.128,2,0.032,24,0.39,55,1.877,56,1.727,106,1.727,107,2.324,145,2.534,185,3.079,321,2.739,331,2.739,375,2.467,396,2.739,523,3.079,590,3.812,726,5.939,727,4.226,728,4.226,729,4.226,730,4.226,731,4.226,732,4.226,733,3.534,734,4.226,735,4.226,736,4.226,737,4.226,738,4.226,739,4.226,740,4.226,741,4.226,742,4.226,743,4.226,744,4.226,745,4.226,746,4.226,747,3.534,748,4.226,749,4.226,750,4.226]],["title/miscellaneous/functions.html",[751,2.263,752,3.882]],["body/miscellaneous/functions.html",[2,0.032,12,1.297,95,2.745,263,2.518,567,3.061,587,3.514,593,4.74,594,3.514,599,3.514,600,3.514,601,3.514,609,3.798,693,3.514,694,4.36,695,4.36,717,3.514,722,4.36,753,4.202,754,5.213,755,4.202,756,4.202,757,4.202,758,4.202]],["title/index.html",[759,2.263,760,2.263,761,2.706]],["body/index.html",[0,0.109,2,0.032,46,1.977,55,2.239,56,1.345,63,1.031,87,2.133,89,1.977,92,1.594,106,1.818,156,2.133,158,3.934,223,1.345,289,1.921,359,2.753,396,2.133,432,2.398,492,2.884,559,3.722,590,2.398,605,2.753,733,2.753,747,3.722,759,2.753,760,2.753,762,4.45,763,3.292,764,3.292,765,3.292,766,2.753,767,3.292,768,3.292,769,5.042,770,5.042,771,3.292,772,3.292,773,3.292,774,3.292,775,3.292,776,3.292,777,3.292,778,3.292,779,3.292,780,3.292,781,3.292,782,3.292,783,3.292,784,4.45,785,3.292,786,4.45,787,3.292,788,3.292,789,3.292,790,3.292,791,4.45,792,3.292,793,3.292,794,3.292,795,3.292,796,3.292,797,3.292,798,3.292,799,4.45,800,3.292,801,3.292,802,3.292,803,3.292,804,3.292,805,2.753,806,3.292,807,3.292,808,3.292,809,5.944,810,3.292,811,3.292,812,2.753,813,3.292,814,3.292,815,3.292,816,3.292,817,3.292,818,3.292,819,3.292,820,3.292,821,3.292,822,3.292,823,3.292,824,4.45,825,3.292,826,3.292,827,3.292,828,3.292,829,3.292,830,3.292,831,3.292]],["title/modules.html",[832,4.394]],["body/modules.html",[2,0.032,64,2.818,91,3.128,100,2.818,101,2.818,171,2.818,301,2.338,302,2.338,833,6.21]],["title/overview.html",[834,4.394]],["body/overview.html",[2,0.032,48,1.919,63,0.918,64,3.221,91,3.965,92,1.919,93,2.313,94,2.313,95,1.919,96,2.313,97,1.919,98,3.314,99,3.314,100,3.706,101,3.628,122,3.295,156,2.568,171,3.571,172,3.314,173,3.314,174,3.314,299,3.314,300,3.314,301,2.672,302,2.672,532,2.672,560,3.314,562,3.314,805,3.314,812,4.202,835,3.962,836,3.962]],["title/properties.html",[725,2.263,837,3.882]],["body/properties.html",[2,0.031,304,4.19,500,3.65,838,5.01,839,5.01,840,5.01,841,5.01]],["title/miscellaneous/variables.html",[751,2.263,842,3.882]],["body/miscellaneous/variables.html",[2,0.032,12,1.263,32,0.53,33,1.583,37,1.231,56,1.336,61,1.048,65,1.563,71,1.759,72,1.794,73,2.381,74,1.794,85,1.252,113,1.563,133,1.794,146,2.381,147,1.794,158,1.563,164,1.563,166,1.967,190,1.794,206,1.452,213,2.381,223,1.618,224,1.794,249,2.528,263,1.759,264,2.783,286,1.733,288,1.39,289,1.252,301,1.583,302,1.583,329,1.563,332,2.885,333,1.794,334,1.794,335,1.794,336,1.794,337,3.704,341,1.563,345,2.885,346,2.381,347,1.794,348,2.381,349,1.794,362,1.794,363,1.563,364,2.381,365,1.794,369,1.733,378,2.734,400,2.118,401,2.118,402,1.563,423,2.381,462,2.312,466,1.794,467,1.794,491,1.39,515,1.563,525,2.118,528,2.566,534,2.118,535,1.563,648,2.381,649,2.381,650,2.381,651,2.381,670,2.381,672,1.794,676,2.734,677,3.312,683,1.794,684,1.794,685,2.734,687,3.312,688,3.312,689,1.794,690,1.794,691,2.734,692,2.734,696,1.794,697,2.734,698,2.734,699,1.794,700,2.734,701,2.734,702,1.794,703,1.794,704,1.794,766,1.794,843,4.768,844,2.145,845,3.269,846,3.961,847,3.269,848,4.429,849,3.269,850,4.429,851,2.145,852,2.145,853,2.145,854,3.269,855,2.145,856,2.145,857,2.145,858,2.145,859,2.145,860,2.145,861,2.145,862,2.145,863,3.269,864,3.269,865,2.145,866,2.145,867,2.145,868,2.145,869,2.145,870,2.145,871,2.145,872,2.145,873,2.145,874,2.145,875,2.145,876,2.145,877,2.145,878,2.145,879,2.145,880,2.145,881,2.145,882,2.145,883,2.145,884,2.145]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":670,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":839,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":308,"title":{},"body":{"modules/CoreModule.html":{}}}],["02",{"_index":314,"title":{},"body":{"modules/CoreModule.html":{}}}],["07",{"_index":309,"title":{},"body":{"modules/CoreModule.html":{}}}],["1",{"_index":156,"title":{"controllers/UsersController-1.html":{}},"body":{"injectables/AuthMiddleware.html":{},"index.html":{},"overview.html":{}}}],["1.9.4",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["10.200.0.45",{"_index":147,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["10.4.0",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["1001",{"_index":169,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["11:05:16",{"_index":316,"title":{},"body":{"modules/CoreModule.html":{}}}],["16",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["17:55:28",{"_index":310,"title":{},"body":{"modules/CoreModule.html":{}}}],["2",{"_index":605,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["2.1.6",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":378,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["2021",{"_index":307,"title":{},"body":{"modules/CoreModule.html":{}}}],["22",{"_index":315,"title":{},"body":{"modules/CoreModule.html":{}}}],["28",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":805,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.1.1",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["3.11.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":812,"title":{},"body":{"index.html":{},"overview.html":{}}}],["403",{"_index":499,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["4xx",{"_index":242,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["5",{"_index":359,"title":{},"body":{"modules/LoggerModule.html":{},"index.html":{}}}],["5.0.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["5.1.7",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["5242880",{"_index":361,"title":{},"body":{"modules/LoggerModule.html":{}}}],["6",{"_index":836,"title":{},"body":{"overview.html":{}}}],["6.35.2",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":835,"title":{},"body":{"overview.html":{}}}],["7.1.17",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":601,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["8/8",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["_getcontextoptions",{"_index":481,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["_getcontextoptions(context",{"_index":433,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["_mockadmin,super",{"_index":131,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["_res",{"_index":137,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["_user",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["abstract",{"_index":276,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["acceptlanguageresolver",{"_index":68,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["admin",{"_index":133,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["admin,textbooks",{"_index":132,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["all_roles",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":470,"title":{},"body":{"guards/RolesGuard.html":{}}}],["allowaccess",{"_index":442,"title":{},"body":{"guards/RolesGuard.html":{}}}],["allowaccess(allowroles",{"_index":449,"title":{},"body":{"guards/RolesGuard.html":{}}}],["allowroles",{"_index":452,"title":{},"body":{"guards/RolesGuard.html":{}}}],["allowroles.some((needrole",{"_index":478,"title":{},"body":{"guards/RolesGuard.html":{}}}],["allresparams",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":771,"title":{},"body":{"index.html":{}}}],["any).stack",{"_index":281,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["anyexceptionsfilter",{"_index":1,"title":{"classes/AnyExceptionsFilter.html":{}},"body":{"classes/AnyExceptionsFilter.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["api",{"_index":769,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":519,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["apiresponse",{"_index":522,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["apisecurity",{"_index":521,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["apisecurity('api_key",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["apitags",{"_index":520,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["apitags('user",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["app.controller",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":320,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":319,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcontroller",{"_index":47,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appi18nmodule",{"_index":64,"title":{"modules/AppI18nModule.html":{}},"body":{"modules/AppI18nModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["application/json",{"_index":668,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["apply(authmiddleware",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appredismodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["appservice",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["argumentshost",{"_index":17,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["array",{"_index":412,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["array.isarray(message",{"_index":252,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["array.isarray(response",{"_index":416,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["async",{"_index":120,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["auth.middleware",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":143,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{}}}],["authenticated",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":767,"title":{},"body":{"index.html":{}}}],["authmiddleware",{"_index":112,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmiddleware.parsemocktoken(bktoken",{"_index":161,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authmodule",{"_index":171,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{},"properties.html":{}}}],["authservice",{"_index":122,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadmodels",{"_index":335,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":774,"title":{},"body":{"index.html":{}}}],["await",{"_index":162,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["bad",{"_index":243,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["badrequest",{"_index":241,"title":{},"body":{"classes/BadRequestFilter.html":{},"modules/CoreModule.html":{}}}],["badrequestexception",{"_index":246,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["badrequestfilter",{"_index":238,"title":{"classes/BadRequestFilter.html":{}},"body":{"classes/BadRequestFilter.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["base",{"_index":26,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["baseexceptionsfilter",{"_index":25,"title":{"classes/BaseExceptionsFilter.html":{}},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"coverage.html":{}}}],["below",{"_index":820,"title":{},"body":{"index.html":{}}}],["bktoken",{"_index":115,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["bktoken.startswith('_mock",{"_index":159,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["body",{"_index":515,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"miscellaneous/variables.html":{}}}],["body(new",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["boilerplate",{"_index":763,"title":{},"body":{"index.html":{}}}],["boilerplate.git",{"_index":798,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":453,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["build",{"_index":778,"title":{},"body":{"index.html":{}}}],["button",{"_index":795,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":370,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["canactivate",{"_index":443,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":454,"title":{},"body":{"guards/RolesGuard.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(badrequestexception",{"_index":247,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["catch(exception",{"_index":14,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["catch(httpexception",{"_index":339,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cd",{"_index":804,"title":{},"body":{"index.html":{}}}],["check",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["check(token",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":0,"title":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["class_serializer:options",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class_serializer_options",{"_index":401,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["classconstructor",{"_index":395,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["classserializerinterceptor",{"_index":392,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["classtransformoptions",{"_index":394,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["click",{"_index":793,"title":{},"body":{"index.html":{}}}],["clone",{"_index":791,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":802,"title":{},"body":{"index.html":{}}}],["clshandleroles",{"_index":474,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cluster_appmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":299,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":300,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":560,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":561,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":562,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cn",{"_index":82,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["code",{"_index":264,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/variables.html":{}}}],["code\":${code",{"_index":657,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["common/auth",{"_index":527,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{}}}],["common/constants",{"_index":463,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["common/decorators",{"_index":526,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["common/interceptors/serializer.interceptor",{"_index":524,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["common/interfaces",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["config",{"_index":71,"title":{},"body":{"modules/AppI18nModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.api_v1",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"miscellaneous/variables.html":{}}}],["config.app_config.jwt_secret",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.app_config.jwt_secret_expiresin",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.language",{"_index":78,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["config.logger",{"_index":347,"title":{},"body":{"modules/LoggerModule.html":{},"miscellaneous/variables.html":{}}}],["config.sequelize",{"_index":333,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["config/.../index.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/index.ts",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":785,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":787,"title":{},"body":{"index.html":{}}}],["configure",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["configure(consumer",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["const",{"_index":32,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"modules/AppI18nModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":402,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":121,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["constructor(logger",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["constructor(protected",{"_index":464,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":446,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["constructor(usermodel",{"_index":573,"title":{},"body":{"injectables/UsersService.html":{}}}],["consumer",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["content",{"_index":666,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["context",{"_index":372,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["context.getclass",{"_index":436,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["context.gethandler",{"_index":435,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":379,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["contextoptions",{"_index":404,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["controller",{"_index":46,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"index.html":{}}}],["controller('users",{"_index":542,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["controller(`${prefix}/user",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["controllers",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["core/core.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":100,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":671,"title":{"coverage.html":{}},"body":{}}],["create",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(createuserdto",{"_index":576,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(newuserdto",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["create_token",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["create_token(payload",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["createparamdecorator",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{}}}],["crypto",{"_index":591,"title":{},"body":{"injectables/UsersService.html":{}}}],["crypto.createhash('md5",{"_index":596,"title":{},"body":{"injectables/UsersService.html":{}}}],["ctx",{"_index":33,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":38,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["ctx.getresponse",{"_index":36,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curenv",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":286,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data.destroy",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.errortype",{"_index":294,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["data.path",{"_index":290,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["data.save",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.stack",{"_index":292,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["data.timestamp",{"_index":296,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["database",{"_index":326,"title":{},"body":{"modules/CoreModule.html":{}}}],["databasemodule",{"_index":301,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["databases/migrations/xxx",{"_index":828,"title":{},"body":{"index.html":{}}}],["date",{"_index":306,"title":{},"body":{"modules/CoreModule.html":{},"injectables/UsersService.html":{}}}],["date().toisostring",{"_index":297,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["date.now",{"_index":382,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["declarations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["default_response_success_code",{"_index":650,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_response_success_message",{"_index":651,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"properties.html":{}}}],["develop",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":786,"title":{},"body":{"index.html":{}}}],["development\".scripts",{"_index":822,"title":{},"body":{"index.html":{}}}],["dist",{"_index":72,"title":{},"body":{"modules/AppI18nModule.html":{},"miscellaneous/variables.html":{}}}],["doc",{"_index":432,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"index.html":{}}}],["doc.tojson",{"_index":430,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["doc:serve",{"_index":823,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":770,"title":{},"body":{"index.html":{}}}],["dtos",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":780,"title":{},"body":{"index.html":{}}}],["email",{"_index":170,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/RequestUser.html":{}}}],["en",{"_index":80,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["encryptpassword",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encryptpassword(inputpassword",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["encryptpassword(originpwd",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["encryptpassword(password",{"_index":594,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["endpoints",{"_index":775,"title":{},"body":{"index.html":{}}}],["enter",{"_index":800,"title":{},"body":{"index.html":{}}}],["environment",{"_index":784,"title":{},"body":{"index.html":{}}}],["error",{"_index":15,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["error('method",{"_index":283,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["error('user",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["errortype",{"_index":274,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["eslint",{"_index":782,"title":{},"body":{"index.html":{}}}],["example",{"_index":164,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/LoggerModule.html":{},"miscellaneous/variables.html":{}}}],["exception",{"_index":19,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["exception.filter",{"_index":27,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":6,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"coverage.html":{}}}],["exception.filter.ts:21",{"_index":13,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:28",{"_index":18,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:54",{"_index":260,"title":{},"body":{"classes/BaseExceptionsFilter.html":{}}}],["exception.filter.ts:61",{"_index":261,"title":{},"body":{"classes/BaseExceptionsFilter.html":{}}}],["exception.filter.ts:70",{"_index":267,"title":{},"body":{"classes/BaseExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":250,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["exception.getstatus",{"_index":41,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":287,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["exception.stack",{"_index":293,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["exceptionfilter",{"_index":7,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["executioncontext",{"_index":369,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist.decorator.ts",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expiresin",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":28,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":145,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"dependencies.html":{}}}],["ext",{"_index":265,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["extend",{"_index":251,"title":{},"body":{"classes/BadRequestFilter.html":{},"modules/CoreModule.html":{}}}],["extendconfig",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":29,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["fallbacklanguage",{"_index":77,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["fallbacks",{"_index":79,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["false",{"_index":337,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["falsy_str_values",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":768,"title":{},"body":{"index.html":{}}}],["fetch('/api/to/path",{"_index":129,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["ffff",{"_index":155,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["fileexist",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fileexist(getfilepath",{"_index":756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filter",{"_index":318,"title":{},"body":{"modules/CoreModule.html":{}}}],["filters",{"_index":325,"title":{},"body":{"modules/CoreModule.html":{}}}],["findall",{"_index":569,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbypk",{"_index":570,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbypk(id",{"_index":579,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":803,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["forcejson",{"_index":661,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["format",{"_index":344,"title":{},"body":{"modules/LoggerModule.html":{}}}],["format.combine(...formatargs",{"_index":356,"title":{},"body":{"modules/LoggerModule.html":{}}}],["formatargs",{"_index":348,"title":{},"body":{"modules/LoggerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formatargs.push(format.uncolorize",{"_index":353,"title":{},"body":{"modules/LoggerModule.html":{}}}],["formatargs.unshift(format.timestamp",{"_index":351,"title":{},"body":{"modules/LoggerModule.html":{}}}],["formatobj",{"_index":425,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["forroutes",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["found",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["function",{"_index":431,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["functions",{"_index":752,"title":{"miscellaneous/functions.html":{}},"body":{}}],["g",{"_index":824,"title":{},"body":{"index.html":{}}}],["gensalt",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gensalt(length",{"_index":600,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["get('/current",{"_index":544,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["get('/current')@apioperation({summary",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["getfilepath",{"_index":757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(@i18nlang",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(lang",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["getmetadata",{"_index":628,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["getmetadata(key",{"_index":633,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["getroles",{"_index":444,"title":{},"body":{"guards/RolesGuard.html":{}}}],["getroles(context",{"_index":456,"title":{},"body":{"guards/RolesGuard.html":{}}}],["getsuccesscode",{"_index":629,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["getsuccesscode(context",{"_index":638,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["getsuccessmessage",{"_index":630,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["getsuccessmessage(context",{"_index":640,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["getting",{"_index":759,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusercurrent",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["getusercurrent(@user",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["getusercurrent(user",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["git",{"_index":796,"title":{},"body":{"index.html":{}}}],["global",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard",{"_index":439,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["hack",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handle",{"_index":409,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["hash",{"_index":595,"title":{},"body":{"injectables/UsersService.html":{}}}],["hash.digest('hex",{"_index":598,"title":{},"body":{"injectables/UsersService.html":{}}}],["hash.update(password",{"_index":597,"title":{},"body":{"injectables/UsersService.html":{}}}],["headerresolver",{"_index":70,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["headerresolver(['x",{"_index":90,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["headers",{"_index":130,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["headers.some",{"_index":663,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["headers?.length",{"_index":662,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["headers_metadata",{"_index":646,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["host",{"_index":16,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["host.switchtohttp",{"_index":34,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["http",{"_index":272,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["http://localhost:3000",{"_index":816,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/documentation",{"_index":777,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":22,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":324,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpmodule",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/theone1006/nestjs",{"_index":797,"title":{},"body":{"index.html":{}}}],["https://yarnpkg.com/lang/en/docs/install",{"_index":811,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":23,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":42,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["i18n",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["i18nfilepath",{"_index":73,"title":{},"body":{"modules/AppI18nModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["i18nlang",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["i18nmodule",{"_index":67,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["i18nmodule.forroot",{"_index":76,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["i18nservice",{"_index":259,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["iconfig",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":168,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/RequestUser.html":{},"injectables/UsersService.html":{}}}],["ierrordata",{"_index":271,"title":{"interfaces/IErrorData.html":{}},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"coverage.html":{}}}],["iextenddata",{"_index":266,"title":{"interfaces/IExtendData.html":{}},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"coverage.html":{}}}],["implements",{"_index":30,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":761,"title":{"index.html":{}},"body":{}}],["indexable",{"_index":389,"title":{},"body":{"interfaces/PlainLiteralObject.html":{}}}],["industry",{"_index":788,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["inject",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{}}}],["inject(winston_module_nest_provider",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(winston_module_provider",{"_index":277,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"coverage.html":{}}}],["injectmodel",{"_index":592,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(user",{"_index":606,"title":{},"body":{"injectables/UsersService.html":{}}}],["inputpassword",{"_index":584,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":806,"title":{},"body":{"index.html":{}}}],["installed",{"_index":810,"title":{},"body":{"index.html":{}}}],["instance",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["instance.password",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["instance.salt",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["instance.save(options",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{}}}],["instance.updatedat",{"_index":622,"title":{},"body":{"injectables/UsersService.html":{}}}],["instanceof",{"_index":40,"title":{},"body":{"classes/AnyExceptionsFilter.html":{}}}],["integrated",{"_index":772,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":366,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["intercept(context",{"_index":368,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["interceptors",{"_index":323,"title":{},"body":{"modules/CoreModule.html":{}}}],["interface",{"_index":270,"title":{"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{}},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":144,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["ioredis",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["ip",{"_index":125,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/RequestUser.html":{}}}],["ipv4",{"_index":150,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["isarray",{"_index":415,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["isfocrejsoncontenttype",{"_index":631,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["isfocrejsoncontenttype(context",{"_index":643,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["isobject",{"_index":398,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["isobject(response",{"_index":418,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["issuperadmin",{"_index":445,"title":{},"body":{"guards/RolesGuard.html":{}}}],["issuperadmin(userroles",{"_index":458,"title":{},"body":{"guards/RolesGuard.html":{}}}],["item",{"_index":421,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["jest",{"_index":765,"title":{},"body":{"index.html":{}}}],["json",{"_index":645,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["jsonformatdocument",{"_index":482,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["jsonformatdocument(doc",{"_index":428,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["jwt",{"_index":766,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["jwt_secret",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtmodule",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":390,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["lang",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppI18nModule.html":{}}}],["last",{"_index":311,"title":{},"body":{"modules/CoreModule.html":{}}}],["legend",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":599,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":840,"title":{},"body":{"properties.html":{}}}],["linked",{"_index":819,"title":{},"body":{"index.html":{}}}],["linter",{"_index":781,"title":{},"body":{"index.html":{}}}],["loaderoptions",{"_index":83,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["lodash",{"_index":461,"title":{},"body":{"guards/RolesGuard.html":{}}}],["logger",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loggerconfig",{"_index":346,"title":{},"body":{"modules/LoggerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggerconfig.filename",{"_index":354,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggerconfig?.timestamp",{"_index":350,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggerconfig?.uncolorize",{"_index":352,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":302,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggeroptions",{"_index":345,"title":{},"body":{"modules/LoggerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["logginginterceptor",{"_index":322,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["make",{"_index":807,"title":{},"body":{"index.html":{}}}],["map",{"_index":397,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["map((data",{"_index":656,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["map((res",{"_index":411,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["math.random",{"_index":602,"title":{},"body":{"injectables/UsersService.html":{}}}],["max_limit",{"_index":364,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":358,"title":{},"body":{"modules/LoggerModule.html":{}}}],["maxsize",{"_index":360,"title":{},"body":{"modules/LoggerModule.html":{}}}],["meat",{"_index":669,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["message",{"_index":249,"title":{},"body":{"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/variables.html":{}}}],["message.join",{"_index":253,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["messages",{"_index":254,"title":{},"body":{"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["meta",{"_index":637,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["metadata",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"guards/RolesGuard.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["methoddecorator",{"_index":758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methodhandleroles",{"_index":472,"title":{},"body":{"guards/RolesGuard.html":{}}}],["middlewareconsumer",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["migrate:new",{"_index":826,"title":{},"body":{"index.html":{}}}],["migrate:rest",{"_index":830,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":751,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mock",{"_index":127,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["mocktoken",{"_index":134,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["mocktoken.split",{"_index":167,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["modified",{"_index":312,"title":{},"body":{"modules/CoreModule.html":{}}}],["module",{"_index":63,"title":{"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":832,"title":{"modules.html":{}},"body":{}}],["ms",{"_index":365,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mysql",{"_index":825,"title":{},"body":{"index.html":{}}}],["name",{"_index":827,"title":{},"body":{"index.html":{}}}],["need",{"_index":284,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["needrole",{"_index":479,"title":{},"body":{"guards/RolesGuard.html":{}}}],["nest",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["nestinterceptor",{"_index":374,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["nestjs",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"dependencies.html":{}}}],["nestjs/common/constants",{"_index":647,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["nestjs/common/utils/shared.utils",{"_index":399,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["nestjs/config",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":321,"title":{},"body":{"modules/CoreModule.html":{},"guards/RolesGuard.html":{},"injectables/WrapResponceInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":331,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":523,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":142,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["nestwinstonmoduleutilities",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{}}}],["nestwinstonmoduleutilities.format.nestlike(loggerconfig.appname",{"_index":349,"title":{},"body":{"modules/LoggerModule.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":89,"title":{},"body":{"modules/AppI18nModule.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":801,"title":{},"body":{"index.html":{}}}],["newpassword",{"_index":513,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["newpassword.password",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["newuser",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["newuserdto",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["next",{"_index":138,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["next.handle().pipe",{"_index":383,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["nextfunction",{"_index":139,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["now",{"_index":381,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":386,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":263,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"interfaces/RequestUser.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":424,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["observable",{"_index":373,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["open",{"_index":815,"title":{},"body":{"index.html":{}}}],["options",{"_index":88,"title":{},"body":{"modules/AppI18nModule.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{}}}],["options.transaction",{"_index":623,"title":{},"body":{"injectables/UsersService.html":{}}}],["originpwd",{"_index":607,"title":{},"body":{"injectables/UsersService.html":{}}}],["otheroptions",{"_index":417,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["output",{"_index":258,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["output(res",{"_index":262,"title":{},"body":{"classes/BaseExceptionsFilter.html":{}}}],["overview",{"_index":834,"title":{"overview.html":{}},"body":{}}],["p",{"_index":636,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["package",{"_index":725,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":31,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["params",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.decorator.ts",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["parsemocktoken",{"_index":119,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["parsemocktoken(mocktoken",{"_index":124,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["password",{"_index":587,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":66,"title":{},"body":{"modules/AppI18nModule.html":{},"modules/AuthModule.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["path.join(__dirname",{"_index":74,"title":{},"body":{"modules/AppI18nModule.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe",{"_index":410,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["plainclass",{"_index":423,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["plainliteralobject",{"_index":387,"title":{"interfaces/PlainLiteralObject.html":{}},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"coverage.html":{}}}],["plainliteralobject[]).map((item",{"_index":419,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["plaintoinstance",{"_index":393,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["plaintoinstance(plainclass",{"_index":427,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["planclass",{"_index":406,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["post",{"_index":514,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["post('/changepassword",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["post('/changepassword')@apioperation({summary",{"_index":511,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["post('/create",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["post('/create')@roles(role_super_admin)@apioperation({summary",{"_index":497,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["prefix",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prettier",{"_index":783,"title":{},"body":{"index.html":{}}}],["private",{"_index":117,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["process.env.node_env",{"_index":288,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":289,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":799,"title":{},"body":{"index.html":{}}}],["promise",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":837,"title":{"properties.html":{}},"body":{}}],["protected",{"_index":8,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":327,"title":{},"body":{"modules/CoreModule.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["query",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryresolver",{"_index":69,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["rc.0",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":818,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["real",{"_index":152,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reason",{"_index":317,"title":{},"body":{"modules/CoreModule.html":{}}}],["rebuild",{"_index":285,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["redis",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["redisservice",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":447,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["remove",{"_index":571,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(id",{"_index":581,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":792,"title":{},"body":{"index.html":{}}}],["req",{"_index":141,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["req.headers.bktoken",{"_index":148,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.headers.token",{"_index":149,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.headers['x",{"_index":151,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.ip",{"_index":153,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.url",{"_index":291,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["req.user",{"_index":114,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req['user",{"_index":160,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":37,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["request.body",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.filter.ts",{"_index":240,"title":{},"body":{"classes/BadRequestFilter.html":{},"coverage.html":{}}}],["request.filter.ts:21",{"_index":244,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["request.filter.ts:23",{"_index":245,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["request.params",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.query",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.url",{"_index":279,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{}}}],["request.user",{"_index":467,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["requestmethod.all",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["requestuser",{"_index":135,"title":{"interfaces/RequestUser.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["requrl",{"_index":380,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["requser",{"_index":116,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["res",{"_index":268,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["res.status(statuscode).json",{"_index":298,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["resolvers",{"_index":86,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["responce.interceptor.ts",{"_index":627,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{}}}],["responce.interceptor.ts:24",{"_index":632,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["responce.interceptor.ts:26",{"_index":642,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["responce.interceptor.ts:48",{"_index":639,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["responce.interceptor.ts:54",{"_index":641,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["responce.interceptor.ts:64",{"_index":644,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["responce.interceptor.ts:86",{"_index":635,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["response",{"_index":35,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["response:success:code",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response:success:message",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response_success_code",{"_index":648,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response_success_message",{"_index":649,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ressuccesscode",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ressuccessmessage",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rest",{"_index":762,"title":{},"body":{"index.html":{}}}],["return",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role_authenticated",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role_super_admin",{"_index":462,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role_user",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["role_vip",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":166,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role_authenticated",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["roles(role_super_admin",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["rolesguard",{"_index":440,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["routing",{"_index":790,"title":{},"body":{"index.html":{}}}],["run",{"_index":813,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":375,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":377,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["salt",{"_index":593,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["saveoptions",{"_index":589,"title":{},"body":{"injectables/UsersService.html":{}}}],["secret",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":773,"title":{},"body":{"index.html":{}}}],["selfuser",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["selfuser.id",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["sequelize",{"_index":590,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["sequelizeconfig",{"_index":332,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequelizemodule",{"_index":330,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":566,"title":{},"body":{"modules/UsersModule.html":{}}}],["sequelizemodule.forroot",{"_index":334,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["serialize",{"_index":414,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["serialize(response",{"_index":486,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["serializer:class",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serializer_class",{"_index":400,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerclass",{"_index":525,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerclass(createuserdto",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["serializerclass(createuserdto)@apiresponse({status",{"_index":498,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["serializerclass(userdto",{"_index":546,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["serializerclass(userdto)@apiresponse({status",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["serializerinterceptor",{"_index":403,"title":{"injectables/SerializerInterceptor.html":{}},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["server",{"_index":814,"title":{},"body":{"index.html":{}}}],["service",{"_index":568,"title":{},"body":{"injectables/UsersService.html":{}}}],["setmetadata('roles",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_success_code",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_success_message",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(serializer_class",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":664,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["setting.name",{"_index":665,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["setting.value",{"_index":667,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["setup",{"_index":821,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["skjdkaj1j2jxxx91213ddudhfs12323",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(2",{"_index":604,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppI18nModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["sqlite3",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["src/.../auth.middleware.ts",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.module.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../i18n.module.ts",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.module.ts",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logging.interceptor.ts",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../req",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../response.constants.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../response.decorator.ts",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.constants.ts",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializer.constants.ts",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializer.decorator.ts",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../system.constants.ts",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.controller.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/auth/auth.middleware.ts",{"_index":113,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/auth/auth.middleware.ts:19",{"_index":123,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/auth/auth.middleware.ts:21",{"_index":140,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/auth/auth.middleware.ts:59",{"_index":126,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/auth/auth.module.ts",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/auth/auth.module.ts:29",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/auth/auth.service.ts",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/common/auth/auth.service.ts:12",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/auth/auth.service.ts:19",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/auth/auth.service.ts:30",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/auth/roles.guard.ts",{"_index":441,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/auth/roles.guard.ts:13",{"_index":448,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/auth/roles.guard.ts:21",{"_index":455,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/auth/roles.guard.ts:45",{"_index":457,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/auth/roles.guard.ts:59",{"_index":459,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/auth/roles.guard.ts:68",{"_index":451,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/constants/response.constants.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/role.constants.ts",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/serializer.constants.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/system.constants.ts",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/file",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/req",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/response.decorator.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/serializer.decorator.ts",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/user.decorator.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interceptors/serializer.interceptor.ts",{"_index":388,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/serializer.interceptor.ts:19",{"_index":391,"title":{},"body":{"interfaces/PlainLiteralObject.html":{}}}],["src/common/interceptors/serializer.interceptor.ts:25",{"_index":484,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["src/common/interceptors/serializer.interceptor.ts:47",{"_index":487,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["src/common/interceptors/serializer.interceptor.ts:71",{"_index":489,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["src/common/interceptors/serializer.interceptor.ts:80",{"_index":485,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["src/common/interceptors/serializer.interceptor.ts:87",{"_index":483,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["src/common/interfaces/request",{"_index":437,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["src/core/core.module.ts",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/database/database.module.ts",{"_index":329,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/filters/any",{"_index":5,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"coverage.html":{}}}],["src/core/filters/bad",{"_index":239,"title":{},"body":{"classes/BadRequestFilter.html":{},"coverage.html":{}}}],["src/core/filters/base",{"_index":257,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"coverage.html":{}}}],["src/core/filters/http",{"_index":338,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/i18n/i18n.module.ts",{"_index":65,"title":{},"body":{"modules/AppI18nModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/interceptors/logging.interceptor.ts",{"_index":363,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/interceptors/logging.interceptor.ts:23",{"_index":367,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/core/interceptors/logging.interceptor.ts:27",{"_index":371,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/core/interceptors/wrap",{"_index":626,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{}}}],["src/core/logger/logger.module.ts",{"_index":341,"title":{},"body":{"modules/LoggerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/users.controller.ts",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:49",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts:65",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts:85",{"_index":512,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["src/users/users.module.ts",{"_index":563,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":567,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/users.service.ts:36",{"_index":574,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:47",{"_index":577,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:67",{"_index":578,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:76",{"_index":580,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:85",{"_index":582,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:97",{"_index":586,"title":{},"body":{"injectables/UsersService.html":{}}}],["stack",{"_index":273,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["standard",{"_index":789,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":817,"title":{},"body":{"index.html":{}}}],["started",{"_index":760,"title":{"index.html":{}},"body":{"index.html":{}}}],["static",{"_index":118,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["status",{"_index":39,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["statuscode",{"_index":248,"title":{},"body":{"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["string",{"_index":12,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"interfaces/PlainLiteralObject.html":{},"interfaces/RequestUser.html":{},"guards/RolesGuard.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string).replace",{"_index":154,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["success",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":545,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["super",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":157,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["sure",{"_index":808,"title":{},"body":{"index.html":{}}}],["svg",{"_index":833,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":747,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["symbol",{"_index":634,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["synchronize",{"_index":336,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":652,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["table",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":376,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["template",{"_index":794,"title":{},"body":{"index.html":{}}}],["test",{"_index":158,"title":{},"body":{"injectables/AuthMiddleware.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test_ip",{"_index":146,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._getcontextoptions",{"_index":405,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["this._getcontextoptions(context",{"_index":407,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["this.allowaccess(allowroles",{"_index":471,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.appservice.gethello(lang",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.check(bktoken",{"_index":163,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.defaultoptions",{"_index":408,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["this.getmetadata(response_success_code",{"_index":658,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["this.getmetadata(response_success_message",{"_index":659,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["this.getroles(context",{"_index":465,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.getsuccesscode(context",{"_index":653,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["this.getsuccessmessage(context",{"_index":654,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["this.isfocrejsoncontenttype(context",{"_index":655,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["this.issuperadmin(userroles",{"_index":469,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.jsonformatdocument(object",{"_index":426,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["this.jwtservice.signasync(payload",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error('jwt",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error((exception",{"_index":280,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["this.logger.error(`anyexceptions",{"_index":43,"title":{},"body":{"classes/AnyExceptionsFilter.html":{}}}],["this.logger.error(`httpexception",{"_index":340,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.logger.error(exception.stack",{"_index":44,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["this.logger.warn(`badrequest",{"_index":255,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["this.logger.warn(`in",{"_index":278,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["this.logger.warn(`slow",{"_index":385,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.logger.warn(exception.stack",{"_index":256,"title":{},"body":{"classes/BadRequestFilter.html":{}}}],["this.output(response",{"_index":45,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["this.reflector.get",{"_index":660,"title":{},"body":{"injectables/WrapResponceInterceptor.html":{}}}],["this.reflector.get('roles",{"_index":473,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.get(key",{"_index":434,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["this.serialize(res",{"_index":413,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["this.transformplantoclass(planclass",{"_index":420,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["this.type",{"_index":295,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["this.usermodel.findall",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbypk(id",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbypk(userid",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(newuserdto",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["this.userservice.updatepasswordbypk",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["throw",{"_index":282,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":313,"title":{},"body":{"modules/CoreModule.html":{}}}],["timestamp",{"_index":275,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{}}}],["token",{"_index":128,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["token_user",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_user.email",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_user.id",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_user.roles",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_user.username",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["tostring(16",{"_index":603,"title":{},"body":{"injectables/UsersService.html":{}}}],["transaction",{"_index":585,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformer",{"_index":396,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["transformplantoclass",{"_index":422,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{}}}],["transformplantoclass(plainclass",{"_index":488,"title":{},"body":{"injectables/SerializerInterceptor.html":{}}}],["transports",{"_index":343,"title":{},"body":{"modules/LoggerModule.html":{}}}],["transports.console",{"_index":355,"title":{},"body":{"modules/LoggerModule.html":{}}}],["transports.file",{"_index":357,"title":{},"body":{"modules/LoggerModule.html":{}}}],["tree",{"_index":831,"title":{},"body":{"index.html":{}}}],["true",{"_index":85,"title":{},"body":{"modules/AppI18nModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":764,"title":{},"body":{"index.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["typeof",{"_index":429,"title":{},"body":{"interfaces/PlainLiteralObject.html":{},"injectables/SerializerInterceptor.html":{},"injectables/UsersService.html":{},"injectables/WrapResponceInterceptor.html":{}}}],["typescript",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":466,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["uniq",{"_index":460,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uniq([...clshandleroles",{"_index":475,"title":{},"body":{"guards/RolesGuard.html":{}}}],["unit",{"_index":779,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":841,"title":{},"body":{"properties.html":{}}}],["updatepassword",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["updatepassword(newpassword",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["updatepasswordbypk",{"_index":572,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepasswordbypk(userid",{"_index":583,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepassworddto",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["use",{"_index":87,"title":{},"body":{"modules/AppI18nModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"index.html":{}}}],["use(req",{"_index":136,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":328,"title":{},"body":{"modules/CoreModule.html":{}}}],["useguards",{"_index":517,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["useguards(rolesguard",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["useinterceptors",{"_index":516,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["useinterceptors(serializerinterceptor",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["user",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.interface.ts",{"_index":438,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user.js",{"_index":829,"title":{},"body":{"index.html":{}}}],["user.roles",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.roles",{"_index":468,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userdto",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":588,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":575,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":165,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/RequestUser.html":{}}}],["userrole",{"_index":480,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userroles",{"_index":450,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userroles.includes(role_super_admin",{"_index":476,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userroles.some((userrole",{"_index":477,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":559,"title":{},"body":{"controllers/UsersController-1.html":{},"index.html":{}}}],["users.controller",{"_index":564,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.entity",{"_index":565,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":490,"title":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":543,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["usersmodule",{"_index":101,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":532,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usetime",{"_index":384,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["utilities",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{}}}],["validationpipe",{"_index":518,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["validator",{"_index":733,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["variable",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":842,"title":{"miscellaneous/variables.html":{}},"body":{}}],["version",{"_index":838,"title":{},"body":{"properties.html":{}}}],["vip",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visit",{"_index":776,"title":{},"body":{"index.html":{}}}],["void",{"_index":20,"title":{},"body":{"classes/AnyExceptionsFilter.html":{},"modules/AuthModule.html":{},"classes/BadRequestFilter.html":{},"classes/BaseExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":84,"title":{},"body":{"modules/AppI18nModule.html":{}}}],["wbj",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{}}}],["winston",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"modules/LoggerModule.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["winston_module_nest_provider",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["winston_module_provider",{"_index":269,"title":{},"body":{"classes/BaseExceptionsFilter.html":{},"interfaces/IErrorData.html":{},"interfaces/IExtendData.html":{},"injectables/LoggingInterceptor.html":{}}}],["winstonmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{}}}],["winstonmodule.forroot(loggeroptions",{"_index":362,"title":{},"body":{"modules/LoggerModule.html":{},"miscellaneous/variables.html":{}}}],["winstorn",{"_index":342,"title":{},"body":{"modules/LoggerModule.html":{}}}],["wrapresponceinterceptor",{"_index":625,"title":{"injectables/WrapResponceInterceptor.html":{}},"body":{"injectables/WrapResponceInterceptor.html":{},"coverage.html":{}}}],["yarn",{"_index":809,"title":{},"body":{"index.html":{}}}],["zh",{"_index":81,"title":{},"body":{"modules/AppI18nModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnyExceptionsFilter.html":{"url":"classes/AnyExceptionsFilter.html","title":"class - AnyExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  AnyExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/filters/any-exception.filter.ts\n        \n\n\n            \n                描述\n            \n            \n                所有异常处理器\n处理所有异常\n\n            \n\n\n            \n                实现\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'any'\n                    \n                \n                    \n                        \n                                被定义在 src/core/filters/any-exception.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/filters/any-exception.filter.ts:28\n                        \n                    \n\n\n            \n                \n                        catch 方法\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\n\nimport { BaseExceptionsFilter } from './base-exception.filter';\n\n/**\n * 所有异常处理器\n *\n * 处理所有异常\n */\n@Catch()\nexport class AnyExceptionsFilter\n  extends BaseExceptionsFilter\n  implements ExceptionFilter\n{\n  protected readonly type: string = 'any';\n\n  /**\n   * catch 方法\n   * @param  {Error} exception\n   * @param  {ArgumentsHost} host\n   */\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    this.logger.error(`AnyExceptions: ${exception}`);\n    this.logger.error(exception.stack);\n\n    this.output(response, status, status, exception, request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello(lang: string)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            被定义在 src/app.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { I18nLang } from 'nestjs-i18n';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(@I18nLang() lang: string): string {\n    return this.appService.getHello(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AppI18nModule.html":{"url":"modules/AppI18nModule.html","title":"module - AppI18nModule","body":"\n                   \n\n\n\n\n    模块列表\n    AppI18nModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/core/i18n/i18n.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport * as path from 'path';\nimport {\n  I18nModule,\n  AcceptLanguageResolver,\n  QueryResolver,\n  HeaderResolver,\n} from 'nestjs-i18n';\nimport { config } from '../../../config';\n\n/**\n * i18n 路径\n * 注意: 与 dist 中的目录保持一致\n *\n */\nconst i18nFilePath = path.join(__dirname, '..', '..', 'i18n');\n@Module({\n  imports: [\n    I18nModule.forRoot({\n      fallbackLanguage: config.language,\n      fallbacks: {\n        'en-*': 'en',\n        'zh-cn': 'zh-cn',\n      },\n      loaderOptions: {\n        path: i18nFilePath,\n        watch: true,\n      },\n      resolvers: [\n        { use: QueryResolver, options: ['lang'] },\n        AcceptLanguageResolver,\n        new HeaderResolver(['x-lang']),\n      ],\n    }),\n  ],\n  controllers: [],\n})\nexport class AppI18nModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    模块列表\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    引入\n                    \n                        \n                            CoreModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n// import {\n//   utilities as nestWinstonModuleUtilities,\n//   WinstonModule,\n// } from 'nest-winston';\nimport { CoreModule } from './core/core.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [CoreModule, UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/common/auth/auth.middleware.ts\n        \n\n\n            \n                描述\n            \n            \n                req.user 中间件\n将 bktoken 尝试解析成 reqUser\n\n            \n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                parseMockToken\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                被定义在 src/common/auth/auth.middleware.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        parseMockToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseMockToken(mockToken: string, ip: string)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/auth.middleware.ts:59\n                        \n                    \n\n\n            \n                \n                        !! 解析mock token\n用于测试\n例子 :fetch('/api/to/path', headers: {\n token: '_mockAdmin,super-admin,textbooks-admin'\n});\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                mockToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         RequestUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, _res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/auth.middleware.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                _res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NestMiddleware, Injectable } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\nimport { RequestUser } from '../interfaces';\n\nimport { Request, Response, NextFunction } from 'express';\n\n/**\n * 用于本地测试 替换为 某一值\n */\nconst TEST_IP = '10.200.0.45';\n\n/**\n * req.user 中间件\n * 将 bktoken 尝试解析成 reqUser\n *\n */\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly authService: AuthService) {}\n  async use(req: Request, _res: Response, next: NextFunction) {\n    const bktoken = (req.headers.bktoken || req.headers.token || '') as string;\n    // 获取 ipv4 地址\n    let ip = ((req.headers['x-real-ip'] || req.ip || '') as string).replace(\n      '::ffff:',\n      '',\n    );\n\n    /**\n     * 本地测试\n     */\n    if (ip === '::1') {\n      ip = TEST_IP;\n    }\n\n    // support test\n    if (bktoken.startsWith('_mock')) {\n      req['user'] = AuthMiddleware.parseMockToken(bktoken, ip);\n      next();\n      return;\n    }\n\n    req['user'] = await this.authService.check(bktoken, ip);\n    next();\n  }\n\n  /**\n   * !! 解析mock token\n   * 用于测试\n   *\n   * @example\n   * fetch('/api/to/path', headers: {\n   *  token: '_mockAdmin,super-admin,textbooks-admin'\n   * });\n   *\n   * @param mockToken\n   * @param ip\n   */\n  private static parseMockToken(mockToken: string, ip: string): RequestUser {\n    /**\n     * 测试、开发环境 mock\n     */\n    const [username, ...roles] = mockToken.split(',');\n\n    const requestUser: RequestUser = {\n      id: 1001,\n      username,\n      email: '',\n      roles,\n      ip,\n    };\n\n    return requestUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    模块列表\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/common/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    导出\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/auth.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  Module,\n  // HttpModule,\n  NestModule,\n  MiddlewareConsumer,\n  RequestMethod,\n} from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthMiddleware } from './auth.middleware';\nimport { AuthService } from './auth.service';\nimport { config } from '../../../config';\n\n@Module({\n  imports: [\n    // HttpModule,\n    // AppRedisModule,\n    JwtModule.register({\n      global: true,\n      secret: config.APP_CONFIG.JWT_SECRET,\n      signOptions: {\n        expiresIn: config.APP_CONFIG.JWT_SECRET_EXPIRESIN,\n      },\n    }),\n  ],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    /**\n     * 全局验证支持 authmiddleware\n     */\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/common/auth/auth.service.ts\n        \n\n\n            \n                描述\n            \n            \n                用户认证\n\n            \n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                            \n                                    Async\n                                create_token\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(logger: LoggerService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                被定义在 src/common/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(token: string, ip: string)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n                        检查 token\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create_token\n                        \n                    \n                \n            \n            \n                \n                        \n                    create_token(payload: RequestUser)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RequestUser\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, LoggerService } from '@nestjs/common';\nimport { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';\n// import * as Redis from 'ioredis';\n// import { RedisService } from 'nestjs-redis';\nimport { JwtService } from '@nestjs/jwt';\nimport { RequestUser } from '../interfaces';\n\n/**\n * 用户认证\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(WINSTON_MODULE_NEST_PROVIDER)\n    private readonly logger: LoggerService,\n    private jwtService: JwtService,\n  ) {}\n\n  async create_token(payload: RequestUser) {\n    return this.jwtService.signAsync(payload);\n  }\n\n  /**\n   * 检查 token\n   *\n   * @param  {string} token\n   * @param  {string} ip\n   * @returns Promise\n   */\n  async check(token: string, ip: string): Promise {\n    const user = {\n      id: null,\n      username: '',\n      email: '',\n      roles: [],\n      ip,\n    } as RequestUser;\n\n    if (!token) {\n      return user;\n    }\n\n    try {\n      const token_user = await this.jwtService.verifyAsync(token);\n      user.id = token_user.id;\n      user.username = token_user.username;\n      user.email = token_user.email;\n      user.roles = token_user.roles;\n    } catch (error) {\n      this.logger.error('jwt decode error with:', token, ip);\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BadRequestFilter.html":{"url":"classes/BadRequestFilter.html","title":"class - BadRequestFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BadRequestFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/filters/bad-request.filter.ts\n        \n\n\n            \n                描述\n            \n            \n                处理所有 BadRequest\n可能会出现校验错误产生的 4xx\n\n            \n\n\n            \n                实现\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'bad-request'\n                    \n                \n                    \n                        \n                                被定义在 src/core/filters/bad-request.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/filters/bad-request.filter.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  ArgumentsHost,\n} from '@nestjs/common';\nimport { Response, Request } from 'express';\nimport { BaseExceptionsFilter } from './base-exception.filter';\n\n/**\n * 处理所有 BadRequest\n *\n * 可能会出现校验错误产生的 4xx\n */\n@Catch(BadRequestException)\nexport class BadRequestFilter\n  extends BaseExceptionsFilter\n  implements ExceptionFilter\n{\n  protected readonly type = 'bad-request';\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const statusCode = exception.getStatus();\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const { message } = exception.getResponse() as any;\n\n    let extend = {};\n    if (Array.isArray(message)) {\n      extend = {\n        message: message.join(','),\n        messages: message,\n      };\n    }\n\n    this.logger.warn(`BadRequest: ${exception}`);\n    this.logger.warn(exception.stack);\n\n    this.output(response, statusCode, statusCode, exception, request, extend);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseExceptionsFilter.html":{"url":"classes/BaseExceptionsFilter.html","title":"class - BaseExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/filters/base-exception.filter.ts\n        \n\n\n            \n                描述\n            \n            \n                异常处理 基础基础过滤器\n\n            \n\n\n            \n                实现\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                output\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(logger: Logger, i18n: I18nService)\n                    \n                \n                        \n                            \n                                被定义在 src/core/filters/base-exception.filter.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'base'\n                    \n                \n                    \n                        \n                                被定义在 src/core/filters/base-exception.filter.ts:54\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/filters/base-exception.filter.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n            \n                \noutput(res: Response, statusCode: number, code: number, exception: Error, req: Request, ext: IExtendData)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/filters/base-exception.filter.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                缺省值\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ext\n                                            \n                                                            IExtendData\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Inject, ArgumentsHost } from '@nestjs/common';\nimport { Response, Request } from 'express';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { I18nService } from 'nestjs-i18n';\n\n/**\n *\n * output error 数据\n */\ninterface IErrorData {\n  /**\n   * http 状态码\n   */\n  statusCode: number;\n  /**\n   * 自定义 code 码\n   */\n  code: number;\n  /**\n   * 响应消息\n   */\n  message: string;\n  /**\n   * 错误详情\n   */\n  stack?: string;\n  /**\n   * 访问地址\n   */\n  path?: string;\n  /**\n   * 错误类型\n   */\n  errorType?: string;\n  /**\n   * 时间戳\n   */\n  timestamp?: string;\n}\n\n/**\n * 扩展参数, 可覆盖 IErrorData\n */\ninterface IExtendData {\n  message?: string;\n  messages?: string;\n}\n\n/**\n * 异常处理 基础基础过滤器\n */\nexport abstract class BaseExceptionsFilter implements ExceptionFilter {\n  protected readonly type: string = 'base';\n\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) protected readonly logger: Logger,\n    protected readonly i18n: I18nService,\n  ) {}\n\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    this.logger.warn(`in ${request.url}`);\n    this.logger.error((exception as any).stack);\n\n    throw new Error('Method is need rebuild.');\n  }\n\n  output(\n    res: Response,\n    statusCode: number,\n    code: number,\n    exception: Error,\n    req: Request,\n    ext: IExtendData = {},\n  ) {\n    const data: IErrorData = {\n      statusCode: statusCode,\n      code: code,\n      message: exception.message,\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      data.path = req.url;\n      data.stack = exception.stack;\n      data.errorType = this.type;\n      data.timestamp = new Date().toISOString();\n    }\n\n    res.status(statusCode).json({\n      ...data,\n      ...ext,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    模块列表\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nAppI18nModule\n\nAppI18nModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppI18nModule->CoreModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCoreModule -->\n\nDatabaseModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    引入\n                    \n                        \n                            AppI18nModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @Author: wbj\n * @Date: 2021-01-07 17:55:28\n * @Last Modified by: wbj\n * @Last Modified time: 2021-02-22 11:05:16\n * @Last Modified reason: 增加全局 filter\n */\n\nimport { Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR, APP_FILTER } from '@nestjs/core';\nimport { LoggingInterceptor } from './interceptors';\nimport {\n  AnyExceptionsFilter,\n  BadRequestFilter,\n  HttpExceptionFilter,\n} from './filters';\nimport { LoggerModule } from './logger';\nimport { AppI18nModule } from './i18n';\nimport { DatabaseModule } from './database';\n\n@Module({\n  imports: [LoggerModule, AppI18nModule, DatabaseModule],\n  providers: [\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n    {\n      provide: APP_FILTER,\n      useClass: AnyExceptionsFilter,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n    {\n      /**\n       * BadRequest extend HttpException\n       * 因此 BadRequest 顺序在最前\n       */\n      provide: APP_FILTER,\n      useClass: BadRequestFilter,\n    },\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    模块列表\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/core/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { config } from '../../../config';\n\n/**\n * 配置参数\n */\nconst sequelizeConfig = config.sequelize;\n\n/**\n * 数据库模块\n */\nconst databaseModule = SequelizeModule.forRoot({\n  ...sequelizeConfig,\n  autoLoadModels: true,\n  synchronize: false,\n});\n\n@Module({\n  imports: [databaseModule],\n  exports: [databaseModule],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/filters/http-exception.filter.ts\n        \n\n\n            \n                描述\n            \n            \n                HttpException异常处理器\n捕获 HttpException\n\n            \n\n\n            \n                实现\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'http'\n                    \n                \n                    \n                        \n                                被定义在 src/core/filters/http-exception.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/filters/http-exception.filter.ts:28\n                        \n                    \n\n\n            \n                \n                        catch 方法\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { BaseExceptionsFilter } from './base-exception.filter';\n\n/**\n * HttpException异常处理器\n *\n * 捕获 HttpException\n */\n@Catch(HttpException)\nexport class HttpExceptionFilter\n  extends BaseExceptionsFilter\n  implements ExceptionFilter\n{\n  protected readonly type: string = 'http';\n\n  /**\n   * catch 方法\n   * @param  {HttpException} exception\n   * @param  {ArgumentsHost} host\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus() || HttpStatus.INTERNAL_SERVER_ERROR;\n\n    this.logger.error(`HttpException: ${exception}`);\n    this.logger.error(exception.stack);\n\n    this.output(response, status, status, exception, request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IErrorData.html":{"url":"interfaces/IErrorData.html","title":"interface - IErrorData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  \n  IErrorData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/filters/base-exception.filter.ts\n        \n\n\n            \n                描述\n            \n            \n                output error 数据\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            可选的\n                                        \n                                            errorType\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            可选的\n                                        \n                                            path\n                                        \n                                \n                                \n                                            可选的\n                                        \n                                            stack\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                            可选的\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    自定义 code 码\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    错误类型\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    响应消息\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    访问地址\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stack:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    错误详情\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    http 状态码\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    时间戳\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExceptionFilter, Inject, ArgumentsHost } from '@nestjs/common';\nimport { Response, Request } from 'express';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { I18nService } from 'nestjs-i18n';\n\n/**\n *\n * output error 数据\n */\ninterface IErrorData {\n  /**\n   * http 状态码\n   */\n  statusCode: number;\n  /**\n   * 自定义 code 码\n   */\n  code: number;\n  /**\n   * 响应消息\n   */\n  message: string;\n  /**\n   * 错误详情\n   */\n  stack?: string;\n  /**\n   * 访问地址\n   */\n  path?: string;\n  /**\n   * 错误类型\n   */\n  errorType?: string;\n  /**\n   * 时间戳\n   */\n  timestamp?: string;\n}\n\n/**\n * 扩展参数, 可覆盖 IErrorData\n */\ninterface IExtendData {\n  message?: string;\n  messages?: string;\n}\n\n/**\n * 异常处理 基础基础过滤器\n */\nexport abstract class BaseExceptionsFilter implements ExceptionFilter {\n  protected readonly type: string = 'base';\n\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) protected readonly logger: Logger,\n    protected readonly i18n: I18nService,\n  ) {}\n\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    this.logger.warn(`in ${request.url}`);\n    this.logger.error((exception as any).stack);\n\n    throw new Error('Method is need rebuild.');\n  }\n\n  output(\n    res: Response,\n    statusCode: number,\n    code: number,\n    exception: Error,\n    req: Request,\n    ext: IExtendData = {},\n  ) {\n    const data: IErrorData = {\n      statusCode: statusCode,\n      code: code,\n      message: exception.message,\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      data.path = req.url;\n      data.stack = exception.stack;\n      data.errorType = this.type;\n      data.timestamp = new Date().toISOString();\n    }\n\n    res.status(statusCode).json({\n      ...data,\n      ...ext,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IExtendData.html":{"url":"interfaces/IExtendData.html","title":"interface - IExtendData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  \n  IExtendData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/filters/base-exception.filter.ts\n        \n\n\n            \n                描述\n            \n            \n                扩展参数, 可覆盖 IErrorData\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        \n                                            message\n                                        \n                                \n                                \n                                            可选的\n                                        \n                                            messages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExceptionFilter, Inject, ArgumentsHost } from '@nestjs/common';\nimport { Response, Request } from 'express';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { I18nService } from 'nestjs-i18n';\n\n/**\n *\n * output error 数据\n */\ninterface IErrorData {\n  /**\n   * http 状态码\n   */\n  statusCode: number;\n  /**\n   * 自定义 code 码\n   */\n  code: number;\n  /**\n   * 响应消息\n   */\n  message: string;\n  /**\n   * 错误详情\n   */\n  stack?: string;\n  /**\n   * 访问地址\n   */\n  path?: string;\n  /**\n   * 错误类型\n   */\n  errorType?: string;\n  /**\n   * 时间戳\n   */\n  timestamp?: string;\n}\n\n/**\n * 扩展参数, 可覆盖 IErrorData\n */\ninterface IExtendData {\n  message?: string;\n  messages?: string;\n}\n\n/**\n * 异常处理 基础基础过滤器\n */\nexport abstract class BaseExceptionsFilter implements ExceptionFilter {\n  protected readonly type: string = 'base';\n\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) protected readonly logger: Logger,\n    protected readonly i18n: I18nService,\n  ) {}\n\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    this.logger.warn(`in ${request.url}`);\n    this.logger.error((exception as any).stack);\n\n    throw new Error('Method is need rebuild.');\n  }\n\n  output(\n    res: Response,\n    statusCode: number,\n    code: number,\n    exception: Error,\n    req: Request,\n    ext: IExtendData = {},\n  ) {\n    const data: IErrorData = {\n      statusCode: statusCode,\n      code: code,\n      message: exception.message,\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      data.path = req.url;\n      data.stack = exception.stack;\n      data.errorType = this.type;\n      data.timestamp = new Date().toISOString();\n    }\n\n    res.status(statusCode).json({\n      ...data,\n      ...ext,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    模块列表\n    LoggerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /**\n * winstorn 日志管理\n */\nimport { Module } from '@nestjs/common';\nimport { transports, format, LoggerOptions } from 'winston';\nimport {\n  WinstonModule,\n  utilities as nestWinstonModuleUtilities,\n} from 'nest-winston';\nimport { config } from '../../../config';\n\n/**\n * 日志配置\n */\nconst loggerConfig = config.logger;\n\n/**\n * logger服务参数\n */\nlet loggerOptions: LoggerOptions;\n\n/**\n * 日志格式化参数\n * 是否添加日志时间\n */\nconst formatArgs = [\n  nestWinstonModuleUtilities.format.nestLike(loggerConfig.appName || 'example'),\n];\nif (loggerConfig?.timestamp) {\n  formatArgs.unshift(format.timestamp());\n}\nif (loggerConfig?.uncolorize) {\n  formatArgs.push(format.uncolorize());\n}\n\nif (!loggerConfig.filename) {\n  loggerOptions = {\n    transports: [\n      new transports.Console({\n        format: format.combine(...formatArgs),\n        ...loggerConfig,\n      }),\n    ],\n  };\n} else {\n  loggerOptions = {\n    transports: [\n      new transports.File({\n        format: format.combine(...formatArgs),\n        maxFiles: 5,\n        maxsize: 5242880,\n        ...loggerConfig,\n      }),\n    ],\n  };\n}\n\n/**\n * logger 模块\n */\nconst loggerModule = WinstonModule.forRoot(loggerOptions);\n\n@Module({\n  imports: [loggerModule],\n  exports: [loggerModule],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/interceptors/logging.interceptor.ts\n        \n\n\n            \n                描述\n            \n            \n                慢日志 拦截器\n记录响应时长超过 MAX_LIMIT ms 的请求，将会被记录\n\n            \n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                被定义在 src/core/interceptors/logging.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/interceptors/logging.interceptor.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n  Inject,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\n/**\n * 响应时长超过 200 ms\n */\nconst MAX_LIMIT = 200;\n\n/**\n * 慢日志 拦截器\n * 记录响应时长超过 MAX_LIMIT ms 的请求，将会被记录\n */\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    const reqUrl = request.url;\n    const now = Date.now();\n\n    return next.handle().pipe(\n      tap(() => {\n        const useTime = Date.now() - now;\n\n        if (useTime >= MAX_LIMIT) {\n          this.logger.warn(`slow request ${reqUrl} use ${Date.now() - now}ms`);\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/PlainLiteralObject.html":{"url":"interfaces/PlainLiteralObject.html","title":"interface - PlainLiteralObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  \n  PlainLiteralObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/common/interceptors/serializer.interceptor.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                被定义在 src/common/interceptors/serializer.interceptor.ts:19\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  ClassSerializerInterceptor,\n} from '@nestjs/common';\n\nimport {\n  plainToInstance,\n  ClassTransformOptions,\n  ClassConstructor,\n} from 'class-transformer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { isObject } from '@nestjs/common/utils/shared.utils';\n\nimport { SERIALIZER_CLASS, CLASS_SERIALIZER_OPTIONS } from '../constants';\n\nexport interface PlainLiteralObject {\n  [key: string]: any;\n}\n\n@Injectable()\nexport class SerializerInterceptor extends ClassSerializerInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const contextOptions = this._getContextOptions(\n      context,\n      CLASS_SERIALIZER_OPTIONS,\n    );\n\n    const planClass = this._getContextOptions(context, SERIALIZER_CLASS);\n    const options = {\n      ...this.defaultOptions,\n      ...contextOptions,\n      planClass,\n    };\n\n    return next\n      .handle()\n      .pipe(\n        map((res: PlainLiteralObject | Array) =>\n          this.serialize(res, options),\n        ),\n      );\n  }\n\n  serialize(\n    response: PlainLiteralObject | Array,\n    options: ClassTransformOptions & { planClass?: ClassConstructor },\n  ): PlainLiteralObject | PlainLiteralObject[] {\n    const isArray = Array.isArray(response);\n    const { planClass, ...otherOptions } = options;\n\n    if (!isObject(response) && !isArray) {\n      return response;\n    }\n\n    if (!planClass) {\n      return response;\n    }\n\n    if (isArray) {\n      return (response as PlainLiteralObject[]).map((item) =>\n        this.transformPlanToClass(planClass, item, otherOptions),\n      );\n    }\n\n    return this.transformPlanToClass(planClass, response, otherOptions);\n  }\n\n  transformPlanToClass(\n    plainClass: ClassConstructor,\n    object: PlainLiteralObject,\n    options: ClassTransformOptions,\n  ): PlainLiteralObject {\n    const formatObj = this.jsonFormatDocument(object);\n    return plainToInstance(plainClass, formatObj, options);\n  }\n\n  jsonFormatDocument(doc: PlainLiteralObject) {\n    if (typeof doc.toJSON === 'function') {\n      return doc.toJSON();\n    }\n    return doc;\n  }\n\n  private _getContextOptions(context: ExecutionContext, key: string): any {\n    return (\n      this.reflector.get(key, context.getHandler()) ||\n      this.reflector.get(key, context.getClass())\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/common/interfaces/request-user.interface.ts\n        \n\n\n            \n                描述\n            \n            \n                操作、访问用户信息\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            可选的\n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RequestUser {\n  id: number;\n\n  email: string;\n\n  username: string;\n\n  roles: string[];\n\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    路由守卫列表\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            文件\n            \n            \n                src/common/auth/roles.guard.ts\n            \n\n\n                \n                描述\n                \n                \n                    roles guard\n角色访问限制\n\n                \n\n\n\n\n                \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                allowAccess\n                            \n                            \n                                canActivate\n                            \n                            \n                                    Protected\n                                getRoles\n                            \n                            \n                                    Protected\n                                isSuperAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    构造方法\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                被定义在 src/common/auth/roles.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        allowAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    allowAccess(allowRoles: string[], userRoles: string[])\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/roles.guard.ts:68\n                        \n                    \n\n\n            \n                \n                        是否允许继续访问\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                缺省值\n                                        \n                                    \n                                    \n                                        \n                                                allowRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                userRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/roles.guard.ts:21\n                        \n                    \n\n\n            \n                \n                        对比用户和所需的角色判断是否能访问方法\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoles(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/roles.guard.ts:45\n                        \n                    \n\n\n            \n                \n                        获取需要的角色\n获取 class 的同时也获取对应 method\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     string[]\n\n                        \n                            \n                                string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isSuperAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuperAdmin(userRoles: string[])\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/auth/roles.guard.ts:59\n                        \n                    \n\n\n            \n                \n                        是否为超级管理员\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                缺省值\n                                        \n                                    \n                                    \n                                        \n                                                userRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { uniq } from 'lodash';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { RequestUser } from '../interfaces';\nimport { ROLE_SUPER_ADMIN } from '../../common/constants';\n\n/**\n * roles guard\n *\n * 角色访问限制\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(protected readonly reflector: Reflector) {}\n\n  /**\n   * 对比用户和所需的角色判断是否能访问方法\n   * @param  {ExecutionContext} context\n   * @returns boolean\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const allowRoles = this.getRoles(context);\n    const request = context.switchToHttp().getRequest();\n    const user: RequestUser | undefined = request.user;\n    const userRoles = user?.roles || [];\n\n    const isSuperAdmin = this.isSuperAdmin(userRoles);\n\n    if (isSuperAdmin) {\n      return true;\n    }\n\n    const allow = this.allowAccess(allowRoles, userRoles);\n\n    return allow;\n  }\n\n  /**\n   * 获取需要的角色\n   *\n   * 获取 class 的同时也获取对应 method\n   * @param  {ExecutionContext} context\n   * @returns string\n   */\n  protected getRoles(context: ExecutionContext): string[] {\n    const methodHandleRoles =\n      this.reflector.get('roles', context.getHandler()) || [];\n\n    const clsHandleRoles =\n      this.reflector.get('roles', context.getClass()) || [];\n\n    return uniq([...clsHandleRoles, ...methodHandleRoles]);\n  }\n\n  /**\n   * 是否为超级管理员\n   * @param userRoles\n   */\n  protected isSuperAdmin(userRoles: string[] = []) {\n    return userRoles && userRoles.includes(ROLE_SUPER_ADMIN);\n  }\n\n  /**\n   * 是否允许继续访问\n   *\n   * @returns boolean\n   */\n  protected allowAccess(\n    allowRoles: string[] = [],\n    userRoles: string[] = [],\n  ): boolean {\n    return userRoles.some((userRole) =>\n      allowRoles.some((needRole) => needRole === userRole),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/SerializerInterceptor.html":{"url":"injectables/SerializerInterceptor.html","title":"injectable - SerializerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  SerializerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/common/interceptors/serializer.interceptor.ts\n        \n\n\n\n            \n                继承\n            \n            \n                            ClassSerializerInterceptor\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getContextOptions\n                            \n                            \n                                intercept\n                            \n                            \n                                jsonFormatDocument\n                            \n                            \n                                serialize\n                            \n                            \n                                transformPlanToClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _getContextOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    _getContextOptions(context: ExecutionContext, key: string)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/interceptors/serializer.interceptor.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/interceptors/serializer.interceptor.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsonFormatDocument\n                        \n                    \n                \n            \n            \n                \njsonFormatDocument(doc: PlainLiteralObject)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/interceptors/serializer.interceptor.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                            PlainLiteralObject\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(response: PlainLiteralObject | Array, options)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/interceptors/serializer.interceptor.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            PlainLiteralObject | Array\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         PlainLiteralObject | []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformPlanToClass\n                        \n                    \n                \n            \n            \n                \ntransformPlanToClass(plainClass: ClassConstructor, object: PlainLiteralObject, options: ClassTransformOptions)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/common/interceptors/serializer.interceptor.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                plainClass\n                                            \n                                                        ClassConstructor\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                object\n                                            \n                                                            PlainLiteralObject\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        ClassTransformOptions\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         PlainLiteralObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  ClassSerializerInterceptor,\n} from '@nestjs/common';\n\nimport {\n  plainToInstance,\n  ClassTransformOptions,\n  ClassConstructor,\n} from 'class-transformer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { isObject } from '@nestjs/common/utils/shared.utils';\n\nimport { SERIALIZER_CLASS, CLASS_SERIALIZER_OPTIONS } from '../constants';\n\nexport interface PlainLiteralObject {\n  [key: string]: any;\n}\n\n@Injectable()\nexport class SerializerInterceptor extends ClassSerializerInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const contextOptions = this._getContextOptions(\n      context,\n      CLASS_SERIALIZER_OPTIONS,\n    );\n\n    const planClass = this._getContextOptions(context, SERIALIZER_CLASS);\n    const options = {\n      ...this.defaultOptions,\n      ...contextOptions,\n      planClass,\n    };\n\n    return next\n      .handle()\n      .pipe(\n        map((res: PlainLiteralObject | Array) =>\n          this.serialize(res, options),\n        ),\n      );\n  }\n\n  serialize(\n    response: PlainLiteralObject | Array,\n    options: ClassTransformOptions & { planClass?: ClassConstructor },\n  ): PlainLiteralObject | PlainLiteralObject[] {\n    const isArray = Array.isArray(response);\n    const { planClass, ...otherOptions } = options;\n\n    if (!isObject(response) && !isArray) {\n      return response;\n    }\n\n    if (!planClass) {\n      return response;\n    }\n\n    if (isArray) {\n      return (response as PlainLiteralObject[]).map((item) =>\n        this.transformPlanToClass(planClass, item, otherOptions),\n      );\n    }\n\n    return this.transformPlanToClass(planClass, response, otherOptions);\n  }\n\n  transformPlanToClass(\n    plainClass: ClassConstructor,\n    object: PlainLiteralObject,\n    options: ClassTransformOptions,\n  ): PlainLiteralObject {\n    const formatObj = this.jsonFormatDocument(object);\n    return plainToInstance(plainClass, formatObj, options);\n  }\n\n  jsonFormatDocument(doc: PlainLiteralObject) {\n    if (typeof doc.toJSON === 'function') {\n      return doc.toJSON();\n    }\n    return doc;\n  }\n\n  private _getContextOptions(context: ExecutionContext, key: string): any {\n    return (\n      this.reflector.get(key, context.getHandler()) ||\n      this.reflector.get(key, context.getClass())\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserCurrent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(newUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('/create')@Roles(ROLE_SUPER_ADMIN)@ApiOperation({summary: '创建新用户'})@SerializerClass(CreateUserDto)@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            被定义在 src/users/users.controller.ts:65\n                        \n                    \n\n\n            \n                \n                        注册用户\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                newUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getUserCurrent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserCurrent(user: RequestUser)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('/current')@ApiOperation({summary: '获取当前用户'})@SerializerClass(UserDto)@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            被定义在 src/users/users.controller.ts:49\n                        \n                    \n\n\n            \n                \n                        获取用户自身数据\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RequestUser\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(newPassword: UpdatePasswordDto, selfUser: RequestUser)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('/changePassword')@ApiOperation({summary: '更新密码'})@SerializerClass(CreateUserDto)@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            被定义在 src/users/users.controller.ts:85\n                        \n                    \n\n\n            \n                \n                        修改密码\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                        UpdatePasswordDto\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                selfUser\n                                            \n                                                            RequestUser\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseInterceptors,\n  UseGuards,\n  ValidationPipe,\n} from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiTags,\n  ApiSecurity,\n  ApiResponse,\n} from '@nestjs/swagger';\n\nimport { SerializerInterceptor } from '../common/interceptors/serializer.interceptor';\nimport { Roles, SerializerClass, User } from '../common/decorators';\nimport { RolesGuard } from '../common/auth';\nimport { ROLE_AUTHENTICATED, ROLE_SUPER_ADMIN } from '../common/constants';\nimport { RequestUser } from '../common/interfaces';\nimport { UserDto, CreateUserDto, UpdatePasswordDto } from './dtos';\n\nimport { config } from '../../config';\nimport { UsersService } from './users.service';\n\nconst prefix = config.API_V1;\n\n@UseGuards(RolesGuard)\n@Roles(ROLE_AUTHENTICATED)\n@Controller(`${prefix}/user`)\n@ApiSecurity('api_key')\n@ApiTags('user')\n@UseInterceptors(SerializerInterceptor)\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n  /**\n   * 获取用户自身数据\n   *\n   * @param user\n   */\n  @Get('/current')\n  @ApiOperation({\n    summary: '获取当前用户',\n  })\n  @SerializerClass(UserDto)\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async getUserCurrent(@User() user: RequestUser): Promise {\n    return user;\n  }\n\n  /**\n   * 注册用户\n   *\n   * @param user\n   */\n  @Post('/create')\n  @Roles(ROLE_SUPER_ADMIN)\n  @ApiOperation({\n    summary: '创建新用户',\n  })\n  @SerializerClass(CreateUserDto)\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async create(\n    @Body() newUserDto: CreateUserDto,\n    // @User() _user: RequestUser,\n  ): Promise {\n    const newUser = await this.userService.create(newUserDto);\n\n    return newUser;\n  }\n\n  /**\n   * 修改密码\n   *\n   * @param user\n   */\n  @Post('/changePassword')\n  @ApiOperation({\n    summary: '更新密码',\n  })\n  @SerializerClass(CreateUserDto)\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async updatePassword(\n    @Body(new ValidationPipe()) newPassword: UpdatePasswordDto,\n    @User() selfUser: RequestUser,\n  ): Promise {\n    const newUser = await this.userService.updatePasswordByPk(\n      selfUser.id,\n      newPassword.password,\n    );\n\n    return newUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/UsersController-1.html":{"url":"controllers/UsersController-1.html","title":"controller - UsersController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                字首\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserCurrent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(newUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('/create')@Roles(ROLE_SUPER_ADMIN)@ApiOperation({summary: '创建新用户'})@SerializerClass(CreateUserDto)@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            被定义在 src/users/users.controller.ts:65\n                        \n                    \n\n\n            \n                \n                        注册用户\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                newUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getUserCurrent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserCurrent(user: RequestUser)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('/current')@ApiOperation({summary: '获取当前用户'})@SerializerClass(UserDto)@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            被定义在 src/users/users.controller.ts:49\n                        \n                    \n\n\n            \n                \n                        获取用户自身数据\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RequestUser\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(newPassword: UpdatePasswordDto, selfUser: RequestUser)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('/changePassword')@ApiOperation({summary: '更新密码'})@SerializerClass(CreateUserDto)@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            被定义在 src/users/users.controller.ts:85\n                        \n                    \n\n\n            \n                \n                        修改密码\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                        UpdatePasswordDto\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                selfUser\n                                            \n                                                            RequestUser\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseInterceptors,\n  UseGuards,\n  ValidationPipe,\n} from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiTags,\n  ApiSecurity,\n  ApiResponse,\n} from '@nestjs/swagger';\n\nimport { SerializerInterceptor } from '../common/interceptors/serializer.interceptor';\nimport { Roles, SerializerClass, User } from '../common/decorators';\nimport { RolesGuard } from '../common/auth';\nimport { ROLE_AUTHENTICATED, ROLE_SUPER_ADMIN } from '../common/constants';\nimport { RequestUser } from '../common/interfaces';\nimport { UserDto, CreateUserDto, UpdatePasswordDto } from './dtos';\n\nimport { config } from '../../config';\nimport { UsersService } from './users.service';\n\nconst prefix = config.API_V1;\n\n@UseGuards(RolesGuard)\n@Roles(ROLE_AUTHENTICATED)\n@Controller(`${prefix}/user`)\n@ApiSecurity('api_key')\n@ApiTags('user')\n@UseInterceptors(SerializerInterceptor)\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n  /**\n   * 获取用户自身数据\n   *\n   * @param user\n   */\n  @Get('/current')\n  @ApiOperation({\n    summary: '获取当前用户',\n  })\n  @SerializerClass(UserDto)\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async getUserCurrent(@User() user: RequestUser): Promise {\n    return user;\n  }\n\n  /**\n   * 注册用户\n   *\n   * @param user\n   */\n  @Post('/create')\n  @Roles(ROLE_SUPER_ADMIN)\n  @ApiOperation({\n    summary: '创建新用户',\n  })\n  @SerializerClass(CreateUserDto)\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async create(\n    @Body() newUserDto: CreateUserDto,\n    // @User() _user: RequestUser,\n  ): Promise {\n    const newUser = await this.userService.create(newUserDto);\n\n    return newUser;\n  }\n\n  /**\n   * 修改密码\n   *\n   * @param user\n   */\n  @Post('/changePassword')\n  @ApiOperation({\n    summary: '更新密码',\n  })\n  @SerializerClass(CreateUserDto)\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async updatePassword(\n    @Body(new ValidationPipe()) newPassword: UpdatePasswordDto,\n    @User() selfUser: RequestUser,\n  ): Promise {\n    const newUser = await this.userService.updatePasswordByPk(\n      selfUser.id,\n      newPassword.password,\n    );\n\n    return newUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    模块列表\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    引入\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UsersController } from './users.controller';\nimport { User } from './users.entity';\nimport { UsersService } from './users.service';\nimport { AuthModule } from '../common/auth';\n\n@Module({\n  imports: [SequelizeModule.forFeature([User]), AuthModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                描述\n            \n            \n                User Service\n\n            \n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByPk\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updatePasswordByPk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                被定义在 src/users/users.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/users/users.service.ts:47\n                        \n                    \n\n\n            \n                \n                        创建用户\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            被定义在 src/users/users.service.ts:67\n                        \n                    \n\n\n            \n                \n                        查找所有用户\n\n\n                        \n                            返回 :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByPk\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByPk(id: number)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/users/users.service.ts:76\n                        \n                    \n\n\n            \n                \n                        根据id,查找用户\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                描述\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                            \n                                                    number\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/users/users.service.ts:85\n                        \n                    \n\n\n            \n                \n                        根据id, 删除用户\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                描述\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                            \n                                                    number\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePasswordByPk\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePasswordByPk(userID: number, inputPassword: string, transaction?: Transaction)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/users/users.service.ts:97\n                        \n                    \n\n\n            \n                \n                        password 更新\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                描述\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                            \n                                                    用户名\n\n                                            \n                                        \n                                        \n                                                inputPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                            \n                                                    密码\n\n                                            \n                                        \n                                        \n                                                transaction\n                                            \n                                                        Transaction\n                                            \n\n                                            \n                                                    是\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Transaction, SaveOptions } from 'sequelize';\nimport crypto from 'crypto';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\n\nimport { User } from './users.entity';\nimport { CreateUserDto, UserDto } from './dtos';\n\n/**\n * 加密密码\n * @param password\n * @param salt\n */\nfunction encryptPassword(password: string, salt: string) {\n  const hash = crypto.createHash('md5');\n  hash.update(password + salt);\n  return hash.digest('hex');\n}\n\n/**\n * 生成 salt\n * @param length number\n */\nfunction genSalt(length: number = 8): string {\n  return Math.random()\n    .toString(16)\n    .slice(2, length + 2);\n}\n\n/**\n * User Service\n *\n */\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User)\n    private readonly userModel: typeof User,\n  ) {}\n\n  /**\n   * 创建用户\n   * @param  {CreateUserDto} createUserDto\n   * @returns Promise\n   */\n  async create(createUserDto: CreateUserDto): Promise {\n    const originPwd = createUserDto.password;\n    const salt = genSalt();\n\n    const password = encryptPassword(originPwd, salt);\n\n    const data = new User({\n      ...createUserDto,\n      salt,\n      password,\n    });\n    const instance = await data.save();\n\n    return instance;\n  }\n\n  /**\n   * 查找所有用户\n   * @returns Promise\n   */\n  async findAll(): Promise {\n    return this.userModel.findAll();\n  }\n\n  /**\n   * 根据id,查找用户\n   * @param id number\n   * @returns Promise\n   */\n  async findByPk(id: number): Promise {\n    return this.userModel.findByPk(id);\n  }\n\n  /**\n   * 根据id, 删除用户\n   * @param id number\n   * @returns Promise\n   */\n  async remove(id: number): Promise {\n    const data = await this.userModel.findByPk(id);\n    await data.destroy();\n    return data;\n  }\n\n  /**\n   * password 更新\n   * @param userID 用户名\n   * @param inputPassword 密码\n   * @param transaction\n   */\n  async updatePasswordByPk(\n    userID: number,\n    inputPassword: string,\n    transaction?: Transaction,\n  ) {\n    const instance = await this.userModel.findByPk(userID);\n\n    if (!instance) {\n      throw new Error('User not found');\n    }\n\n    const salt = genSalt();\n    const password = encryptPassword(inputPassword, salt);\n\n    instance.salt = salt;\n    instance.password = password;\n    instance.updatedAt = new Date();\n\n    const options: SaveOptions = {};\n    if (transaction) {\n      options.transaction = transaction;\n    }\n\n    await instance.save(options);\n\n    return instance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/WrapResponceInterceptor.html":{"url":"injectables/WrapResponceInterceptor.html","title":"injectable - WrapResponceInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  WrapResponceInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/core/interceptors/wrap-responce.interceptor.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getMetaData\n                            \n                            \n                                    Private\n                                getSuccessCode\n                            \n                            \n                                    Private\n                                getSuccessMessage\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                isFocreJsonContentType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                被定义在 src/core/interceptors/wrap-responce.interceptor.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMetaData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetaData(key: string | symbol, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/interceptors/wrap-responce.interceptor.ts:86\n                        \n                    \n\n                    \n                        \n                            类型参数 :\n                            \n                                    P\n                            \n                        \n                    \n\n            \n                \n                        获取 meta 数据,优先从 method 获取\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        string | symbol\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSuccessCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSuccessCode(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/interceptors/wrap-responce.interceptor.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSuccessMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSuccessMessage(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/interceptors/wrap-responce.interceptor.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/interceptors/wrap-responce.interceptor.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isFocreJsonContentType\n                        \n                    \n                \n            \n            \n                \n                        \n                    isFocreJsonContentType(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            被定义在 src/core/interceptors/wrap-responce.interceptor.ts:64\n                        \n                    \n\n\n            \n                \n                        前端是否 需要json格式解析\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { HEADERS_METADATA } from '@nestjs/common/constants';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  RESPONSE_SUCCESS_CODE,\n  RESPONSE_SUCCESS_MESSAGE,\n  DEFAULT_RESPONSE_SUCCESS_CODE,\n  DEFAULT_RESPONSE_SUCCESS_MESSAGE,\n} from '../../common/constants';\n\n// export interface Response {\n//   data: T;\n// }\n\n@Injectable()\nexport class WrapResponceInterceptor implements NestInterceptor {\n  constructor(private readonly reflector: Reflector) {}\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const code = this.getSuccessCode(context);\n    const message = this.getSuccessMessage(context);\n    // 强制使用 json type\n    const isFocreJsonContentType = this.isFocreJsonContentType(context);\n\n    return next.handle().pipe(\n      map((data) => {\n        const type = typeof data;\n        if (type === 'string' && isFocreJsonContentType) {\n          return `{\"code\":${code}, \"message\": \"${message}\", \"data\": ${data}}`;\n        } else {\n          return {\n            code,\n            message,\n            data,\n          };\n        }\n      }),\n    );\n  }\n\n  private getSuccessCode(context: ExecutionContext): number {\n    const code = this.getMetaData(RESPONSE_SUCCESS_CODE, context);\n\n    return code || DEFAULT_RESPONSE_SUCCESS_CODE;\n  }\n\n  private getSuccessMessage(context: ExecutionContext): string {\n    const message = this.getMetaData(RESPONSE_SUCCESS_MESSAGE, context);\n\n    return message || DEFAULT_RESPONSE_SUCCESS_MESSAGE;\n  }\n\n  /**\n   * 前端是否 需要json格式解析\n   * @param context\n   */\n  private isFocreJsonContentType(context: ExecutionContext): boolean {\n    const headers = this.reflector.get(\n      HEADERS_METADATA,\n      context.getHandler(),\n    );\n\n    const forceJson =\n      headers?.length &&\n      headers.some(\n        (setting) =>\n          setting.name === 'Content-Type' &&\n          setting.value === 'application/json',\n      );\n\n    return forceJson;\n  }\n\n  /**\n   * 获取 meta 数据,优先从 method 获取\n   * @param key\n   * @param context\n   */\n  private getMetaData(key: string | symbol, context: ExecutionContext) {\n    let meta = this.reflector.get(key, context.getHandler());\n\n    // 支持 meat 为 0\n    if (typeof meta === 'number') {\n      return meta;\n    }\n\n    if (!meta) {\n      meta = this.reflector.get(key, context.getClass());\n    }\n\n    return meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                config/index.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                config/index.ts\n            \n            variable\n            curenv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                config/index.ts\n            \n            variable\n            extendConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/common/auth/auth.middleware.ts\n            \n            variable\n            TEST_IP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/common/auth/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/common/constants/response.constants.ts\n            \n            variable\n            DEFAULT_RESPONSE_SUCCESS_CODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/response.constants.ts\n            \n            variable\n            DEFAULT_RESPONSE_SUCCESS_MESSAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/response.constants.ts\n            \n            variable\n            RESPONSE_SUCCESS_CODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/response.constants.ts\n            \n            variable\n            RESPONSE_SUCCESS_MESSAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/role.constants.ts\n            \n            variable\n            ALL_ROLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/role.constants.ts\n            \n            variable\n            ROLE_AUTHENTICATED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/role.constants.ts\n            \n            variable\n            ROLE_SUPER_ADMIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/role.constants.ts\n            \n            variable\n            ROLE_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/role.constants.ts\n            \n            variable\n            ROLE_VIP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/serializer.constants.ts\n            \n            variable\n            CLASS_SERIALIZER_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/serializer.constants.ts\n            \n            variable\n            SERIALIZER_CLASS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/system.constants.ts\n            \n            variable\n            FALSY_STR_VALUES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/system.constants.ts\n            \n            variable\n            JWT_SECRET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/file-exist.decorator.ts\n            \n            function\n            FileExist\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/req-params.decorator.ts\n            \n            variable\n            AllResParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/response.decorator.ts\n            \n            variable\n            ResSuccessCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/response.decorator.ts\n            \n            variable\n            ResSuccessMessage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/serializer.decorator.ts\n            \n            variable\n            SerializerClass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/serializer.interceptor.ts\n            \n            injectable\n            SerializerInterceptor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/interceptors/serializer.interceptor.ts\n            \n            interface\n            PlainLiteralObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interfaces/request-user.interface.ts\n            \n            interface\n            RequestUser\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/core/database/database.module.ts\n            \n            variable\n            databaseModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/database/database.module.ts\n            \n            variable\n            sequelizeConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/filters/any-exception.filter.ts\n            \n            class\n            AnyExceptionsFilter\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/core/filters/bad-request.filter.ts\n            \n            class\n            BadRequestFilter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/core/filters/base-exception.filter.ts\n            \n            class\n            BaseExceptionsFilter\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/core/filters/base-exception.filter.ts\n            \n            interface\n            IErrorData\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/core/filters/base-exception.filter.ts\n            \n            interface\n            IExtendData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/core/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/core/i18n/i18n.module.ts\n            \n            variable\n            i18nFilePath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/core/interceptors/logging.interceptor.ts\n            \n            variable\n            MAX_LIMIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/interceptors/wrap-responce.interceptor.ts\n            \n            injectable\n            WrapResponceInterceptor\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/core/logger/logger.module.ts\n            \n            variable\n            formatArgs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/logger/logger.module.ts\n            \n            variable\n            loggerConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/logger/logger.module.ts\n            \n            variable\n            loggerModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/logger/logger.module.ts\n            \n            variable\n            loggerOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            prefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            function\n            encryptPassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            function\n            genSalt\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        依赖项\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/sequelize : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.17\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            nest-winston : ^1.9.4\n        \n            nestjs-i18n : ^10.4.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            sequelize : ^6.35.2\n        \n            sequelize-typescript : ^2.1.6\n        \n            sqlite3 : ^5.1.7-rc.0\n        \n            swagger-ui-express : ^5.0.0\n        \n            winston : ^3.11.0\n    \n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  函数\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            encryptPassword   (src/.../users.service.ts)\n                        \n                        \n                            FileExist   (src/.../file-exist.decorator.ts)\n                        \n                        \n                            genSalt   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        encryptPassword\n                        \n                    \n                \n            \n            \n                \nencryptPassword(password: string, salt: string)\n                \n            \n\n\n\n\n            \n                \n                        加密密码\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                        \n                                                salt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genSalt\n                        \n                    \n                \n            \n            \n                \ngenSalt(length: number)\n                \n            \n\n\n\n\n            \n                \n                        生成 salt\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                                类型\n                                            可选的\n                                                缺省值\n                                                描述\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    否\n                                            \n\n                                            \n                                                    8\n                                            \n\n                                            \n                                                    number\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            返回 :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/file-exist.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileExist\n                        \n                    \n                \n            \n            \n                \nFileExist(getFilePath)\n                \n            \n\n\n\n\n            \n                \n                        如果文件存在，且无需更新则直接返回文件路径\n\n\n                            \n                                参数列表 :\n                                \n                                \n                                    \n                                        \n                                            名称\n                                            可选的\n                                        \n                                    \n                                    \n                                        \n                                                getFilePath\n\n                                            \n                                                    否\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            返回 :     MethodDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS REST Boilerplate\n\n用于构建新项目, 使用NestJS 框架. 欢迎提出您的宝贵意见.\n\nNestJS + TS + swagger + class-validator + class-transformer + jest + jwt + Authentication + i18n\n核心思想\n\n配置优于代码\n\nFeatures\n\nSwagger Api Documentation\nAlready integrated API documentation. To see all available endpoints visit http://localhost:3000/documentation\n\n\nsequelize\nbuild doc\n\ntest\nunit test\ne2e test\n\n\nLinter\neslint + prettier = ❤️\n\n\nEnvironment Configuration\ndevelopment, test and production environment configurations\n\n\nIndustry-standard routing\n\nGetting started\n例子 :# 1. Clone the repository or click on \"Use this template\" button.\ngit clone https://github.com/TheOne1006/nestjs-rest-api-boilerplate.git my-new-project\n\n# 2. Enter your newly-cloned folder.\ncd my-new-project\n\n# 3. Install dependencies. (Make sure yarn is installed: https://yarnpkg.com/lang/en/docs/install)\nyarn\n\n# 4. Run development server and open http://localhost:3000\nyarn start:dev\n\n# 5. Read the documentation linked below for \"Setup and development\".Scripts\n例子 :# 查看文档\n$ yarn doc:serve\n\n# create controller\n$ nest g controller users\n\n# create module\n$ nest g module users\n\n# 创建 mysql 文件\nyarn migrate:new -- --name user # 创建文件 databases/migrations/xxx-user.js\n\n# 重新建库命令\nyarn migrate:rest\n\n# 生成目录树\n$ yarn tree\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n            \n                \n                    \n                        AppI18nModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppI18nModule\n\nAppI18nModule\n\nCoreModule -->\n\nAppI18nModule->CoreModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCoreModule -->\n\nDatabaseModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 模块列表\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    4 类列表\n                \n            \n        \n        \n            \n                \n                    \n                    1 路由守卫\n                \n            \n        \n        \n            \n                \n                    \n                    4 接口\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        属性列表\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            ALL_ROLES   (src/.../role.constants.ts)\n                        \n                        \n                            AllResParams   (src/.../req-params.decorator.ts)\n                        \n                        \n                            CLASS_SERIALIZER_OPTIONS   (src/.../serializer.constants.ts)\n                        \n                        \n                            config   (config/.../index.ts)\n                        \n                        \n                            curenv   (config/.../index.ts)\n                        \n                        \n                            databaseModule   (src/.../database.module.ts)\n                        \n                        \n                            DEFAULT_RESPONSE_SUCCESS_CODE   (src/.../response.constants.ts)\n                        \n                        \n                            DEFAULT_RESPONSE_SUCCESS_MESSAGE   (src/.../response.constants.ts)\n                        \n                        \n                            extendConfig   (config/.../index.ts)\n                        \n                        \n                            FALSY_STR_VALUES   (src/.../system.constants.ts)\n                        \n                        \n                            formatArgs   (src/.../logger.module.ts)\n                        \n                        \n                            i18nFilePath   (src/.../i18n.module.ts)\n                        \n                        \n                            JWT_SECRET   (src/.../system.constants.ts)\n                        \n                        \n                            loggerConfig   (src/.../logger.module.ts)\n                        \n                        \n                            loggerModule   (src/.../logger.module.ts)\n                        \n                        \n                            loggerOptions   (src/.../logger.module.ts)\n                        \n                        \n                            MAX_LIMIT   (src/.../logging.interceptor.ts)\n                        \n                        \n                            prefix   (src/.../users.controller.ts)\n                        \n                        \n                            RESPONSE_SUCCESS_CODE   (src/.../response.constants.ts)\n                        \n                        \n                            RESPONSE_SUCCESS_MESSAGE   (src/.../response.constants.ts)\n                        \n                        \n                            ResSuccessCode   (src/.../response.decorator.ts)\n                        \n                        \n                            ResSuccessMessage   (src/.../response.decorator.ts)\n                        \n                        \n                            ROLE_AUTHENTICATED   (src/.../role.constants.ts)\n                        \n                        \n                            ROLE_SUPER_ADMIN   (src/.../role.constants.ts)\n                        \n                        \n                            ROLE_USER   (src/.../role.constants.ts)\n                        \n                        \n                            ROLE_VIP   (src/.../role.constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            sequelizeConfig   (src/.../database.module.ts)\n                        \n                        \n                            SERIALIZER_CLASS   (src/.../serializer.constants.ts)\n                        \n                        \n                            SerializerClass   (src/.../serializer.decorator.ts)\n                        \n                        \n                            TEST_IP   (src/.../auth.middleware.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/role.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        类型 :     []\n\n                    \n                \n                \n                    \n                        缺省值 : [\n  ROLE_AUTHENTICATED,\n  ROLE_SUPER_ADMIN,\n  ROLE_VIP,\n  ROLE_USER,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLE_AUTHENTICATED\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'authenticated'\n                    \n                \n\n            \n                \n                    Role constants\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLE_SUPER_ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'super-admin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLE_USER\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'user'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLE_VIP\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'vip'\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/req-params.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllResParams\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return {\n      query: request.query,\n      body: request.body,\n      params: request.params,\n    };\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/common/constants/serializer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLASS_SERIALIZER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'class_serializer:options'\n                    \n                \n\n            \n                \n                    hack system\n格式化参数项\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIALIZER_CLASS\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'serializer:class'\n                    \n                \n\n            \n                \n                    格式化的依赖类\n\n                \n            \n\n        \n    \n\n    config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         Iconfig\n\n                    \n                \n                \n                    \n                        缺省值 : {\n  ...defaultConfig,\n  ...extendConfig,\n}\n                    \n                \n\n            \n                \n                    环境配置项\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        curenv\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    当前环境\ntest 测试\nproduction 生产\ndevelop 开发\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extendConfig\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         any\n\n                    \n                \n                \n                    \n                        缺省值 : {}\n                    \n                \n\n            \n                \n                    扩展的config 信息\n\n                \n            \n\n        \n    \n\n    src/core/database/database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseModule\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : SequelizeModule.forRoot({\n  ...sequelizeConfig,\n  autoLoadModels: true,\n  synchronize: false,\n})\n                    \n                \n\n            \n                \n                    数据库模块\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequelizeConfig\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : config.sequelize\n                    \n                \n\n            \n                \n                    配置参数\n\n                \n            \n\n        \n    \n\n    src/common/constants/response.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_RESPONSE_SUCCESS_CODE\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         number\n\n                    \n                \n                \n                    \n                        缺省值 : 0\n                    \n                \n\n            \n                \n                    默认code返回值\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RESPONSE_SUCCESS_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'success'\n                    \n                \n\n            \n                \n                    返回 message 返回值\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_SUCCESS_CODE\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'response:success:code'\n                    \n                \n\n            \n                \n                    响应成功 code\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_SUCCESS_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'response:success:message'\n                    \n                \n\n            \n                \n                    响应成功 message 信息\n\n                \n            \n\n        \n    \n\n    src/common/constants/system.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALSY_STR_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        类型 :     []\n\n                    \n                \n                \n                    \n                        缺省值 : ['false', '0', 'null', 'undefined', '']\n                    \n                \n\n            \n                \n                    string 版本的 false 值\n满足一下的文字,表示为 false\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JWT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : 'skjdkaj1j2jxxx91213ddudhfs12323'\n                    \n                \n\n            \n                \n                    jwt secret\n\n                \n            \n\n        \n    \n\n    src/core/logger/logger.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatArgs\n                        \n                    \n                \n            \n                \n                    \n                        类型 :     []\n\n                    \n                \n                \n                    \n                        缺省值 : [\n  nestWinstonModuleUtilities.format.nestLike(loggerConfig.appName || 'example'),\n]\n                    \n                \n\n            \n                \n                    日志格式化参数\n是否添加日志时间\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : config.logger\n                    \n                \n\n            \n                \n                    日志配置\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggerModule\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : WinstonModule.forRoot(loggerOptions)\n                    \n                \n\n            \n                \n                    logger 模块\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggerOptions\n                        \n                    \n                \n            \n                \n                    \n                        类型 :     LoggerOptions\n\n                    \n                \n\n            \n                \n                    logger服务参数\n\n                \n            \n\n        \n    \n\n    src/core/i18n/i18n.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        i18nFilePath\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : path.join(__dirname, '..', '..', 'i18n')\n                    \n                \n\n            \n                \n                    i18n 路径\n注意: 与 dist 中的目录保持一致\n\n                \n            \n\n        \n    \n\n    src/core/interceptors/logging.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAX_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         number\n\n                    \n                \n                \n                    \n                        缺省值 : 200\n                    \n                \n\n            \n                \n                    响应时长超过 200 ms\n\n                \n            \n\n        \n    \n\n    src/users/users.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : config.API_V1\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResSuccessCode\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : (code: number) =>\n  SetMetadata(RESPONSE_SUCCESS_CODE, code)\n                    \n                \n\n            \n                \n                    设置响应 code\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : (message: string) =>\n  SetMetadata(RESPONSE_SUCCESS_MESSAGE, message)\n                    \n                \n\n            \n                \n                    设置正确响应的 message\n\n                \n            \n\n        \n    \n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : (...roles: string[]) => SetMetadata('roles', roles)\n                    \n                \n\n            \n                \n                    设置所需的访问角色\n\n                \n            \n\n        \n    \n\n    src/common/decorators/serializer.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SerializerClass\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : (plainClass: any) =>\n  SetMetadata(SERIALIZER_CLASS, plainClass)\n                    \n                \n\n\n        \n    \n\n    src/common/auth/auth.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TEST_IP\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        缺省值 : '10.200.0.45'\n                    \n                \n\n            \n                \n                    用于本地测试 替换为 某一值\n\n                \n            \n\n        \n    \n\n    src/common/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        缺省值 : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
